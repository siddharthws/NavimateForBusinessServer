var app=angular.module("navimate",["ui.router","ngStorage","angular-js-xlsx","ngMaterial","ngMap","ngTable","ngCookies","angularjs-dropdown-multiselect","ngFileSaver","angular.filter"]);app.factory("httpResponseInterceptor",["$q","$injector",function($q,$injector){return{response:function(responseData){return responseData},responseError:function(response){switch(response.status){case 401:$injector.get("$state").go("login");break;default:console.log("Unknown error from server : "+response.status)}return $q.reject(response)}}}]),app.filter("bytetobase",function(){return function(buffer){for(var binary="",bytes=new Uint8Array(buffer),len=bytes.byteLength,i=0;i<len;i++)binary+=String.fromCharCode(bytes[i]);return window.btoa(binary)}}),app.config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("")}]),app.config(function($stateProvider,$urlRouterProvider,$httpProvider,$compileProvider){$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|file|ftp|blob):|data:image\//),$httpProvider.interceptors.push("httpResponseInterceptor"),$urlRouterProvider.when("","/"),$urlRouterProvider.when("/dashboard","/dashboard/team/manage"),$urlRouterProvider.when("/dashboard/team","/dashboard/team/manage"),$urlRouterProvider.when("/dashboard/tasks","/dashboard/tasks/manage"),$urlRouterProvider.when("/dashboard/forms","/dashboard/forms/manage"),$stateProvider.state("home",{url:"/",templateUrl:"/static/views/home.html",controller:"HomeCtrl"}).state("login",{url:"/",templateUrl:"/static/views/home.html",controller:"HomeCtrl",params:{login:!0}}).state("legal",{url:"/legal",templateUrl:"/static/views/legal.html"}).state("help",{url:"/help",templateUrl:"/static/views/help.html",controller:"HelpCtrl"}).state("dashboard",{abstract:!0,url:"/dashboard",templateUrl:"/static/views/dashboard.html",controller:"DashboardCtrl"}).state("dashboard.team-manage",{url:"/team/manage",templateUrl:"/static/views/dashboard/team/manage.html",controller:"TeamManageCtrl as $ctrl"}).state("dashboard.team-report",{url:"/team/report",templateUrl:"/static/views/dashboard/team/report.html",controller:"TeamReportCtrl"}).state("dashboard.leads-manage",{url:"/leads/manage",templateUrl:"/static/views/dashboard/leads/manage.html",controller:"LeadManageCtrl as $ctrl"}).state("dashboard.leads-report",{url:"/leads/report",templateUrl:"/static/views/dashboard/leads/report.html",controller:"LeadReportCtrl"}).state("dashboard.tasks-manage",{url:"/tasks/manage",templateUrl:"/static/views/dashboard/tasks/manage.html",controller:"TaskManageCtrl as $ctrl"}).state("dashboard.forms-manage",{url:"/forms/manage",templateUrl:"/static/views/dashboard/forms/manage.html",controller:"FormManageCtrl as $ctrl"}).state("photos",{url:"/photos?name",templateUrl:"/static/views/photos.html",controller:"PhotosCtrl"})}),app.directive("stringToNumber",function(){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$parsers.push(function(value){return""+value}),ngModel.$formatters.push(function(value){return parseFloat(value)})}}}),app.controller("FormManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService){function init(){$rootScope.showWaitingDialog("Please wait while we are fetching forms..."),$http({method:"GET",url:"/api/users/form",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),vm.forms=response.data,vm.selection=[],vm.forms.forEach(function(){vm.selection.push(!1)})},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load forms !!!")})}var vm=this;vm.edit=function(){var selectedItems=vm.getSelectedItems();1!=selectedItems.length?ToastService.toast("Please select a single form to edit..."):DialogService.formEditor(selectedItems[0],init)},vm.create=function(){DialogService.formEditor(null,init)},vm.toggleAll=function(){for(var i=0;i<vm.selection.length;i++)vm.selection[i]=vm.bCheckAll},vm.getSelectedItems=function(){for(var selectedItems=[],i=0;i<vm.selection.length;i++)vm.selection[i]&&selectedItems.push(vm.forms[i]);return selectedItems},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_FORMS],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE],vm.selection=[],vm.forms=[],vm.bCheckAll=!1,init()}),app.controller("LeadManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,$window,ExcelService,DialogService,ToastService){function init(){$rootScope.showWaitingDialog("Please wait while we are fetching leads data..."),$http({method:"GET",url:"/api/users/lead",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),vm.leads=response.data,vm.selection=[],vm.leads.forEach(function(){vm.selection.push(!1)})},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load leads")})}var vm=this;vm.add=function(){DialogService.leadEditor(null,init)},vm.showOnMaps=function(lead){$window.open("https://www.google.com/maps/search/?api=1&query="+lead.latitude+","+lead.longitude,"_blank")},vm.toggleAll=function(){for(var i=0;i<vm.selection.length;i++)vm.selection[i]=vm.bCheckAll},vm.getSelectedItems=function(){for(var selectedItems=[],i=0;i<vm.selection.length;i++)vm.selection[i]&&selectedItems.push(vm.leads[i]);return selectedItems},vm.remove=function(){DialogService.confirm("Are you sure you want to remove these "+vm.getSelectedItems().length+" leads ?",function(){$rootScope.showWaitingDialog("Please wait while we are removing leads..."),$http({method:"POST",url:"/api/users/lead/remove",headers:{"X-Auth-Token":$localStorage.accessToken},data:{leads:vm.getSelectedItems()}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("leads removed..."),init()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to remove leads!!!"),init()})})},vm.edit=function(){DialogService.leadEditor(vm.getSelectedItems())},vm.createtasks=function(){var task=[];vm.selection.forEach(function(bSelected,i){bSelected&&task.push({lead:vm.leads[i]})}),DialogService.taskCreator(task)},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_LEADS],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE],vm.leads=[],vm.selection=[],vm.bCheckAll=!1,init()}),app.controller("LeadReportCtrl",function($scope,$rootScope,$http,$localStorage,$state,$window,$filter,ExcelService,ToastService,DialogService){$scope.export=function(){$scope.filteredValues.length?ExcelService.export($scope.filteredValues,$scope.columns,"Lead-Report"):ToastService.toast("Nothing to export !!!")},$scope.showImage=function(filename){$window.open($state.href("photos",{name:filename}),"_blank")},$scope.showLocation=function(latlng){var latLngArr=latlng.split(",");DialogService.locationViewer(latLngArr[0],latLngArr[1])},$scope.resetFilters=function(){$scope.filter={selection:{},text:{},number:{},date:{},sort:[]},function(){for(var i=0;i<$scope.columns.length;i++){var column=$scope.columns[i];if("selection"==column.type||"radioList"==column.type){var selectFilter={};selectFilter.options=[],selectFilter.unselected=[];for(var j=0;j<$scope.values.length;j++){var value=$scope.values[j][column.title];-1==selectFilter.options.indexOf(value)&&selectFilter.options.push(value)}$scope.filter.selection[column.title]=selectFilter}else"number"==column.type?$scope.filter.number[column.title]={}:"text"==column.type?$scope.filter.text[column.title]={}:"date"==column.type&&($scope.filter.date[column.title]={})}}()},$scope.filterSort=function(property,bReverse){bReverse?(-1!=$scope.filter.sort.indexOf(property)&&$scope.filter.sort.splice($scope.filter.sort.indexOf(property),1),property="-"+property):-1!=$scope.filter.sort.indexOf("-"+property)&&$scope.filter.sort.splice($scope.filter.sort.indexOf("-"+property),1),-1!=$scope.filter.sort.indexOf(property)?$scope.filter.sort.splice($scope.filter.sort.indexOf(property),1):$scope.filter.sort.push(property),$scope.applyFilters()},$scope.filterSelect=function(column,value){var idx=$scope.filter.selection[column].unselected.indexOf(value);-1==idx?$scope.filter.selection[column].unselected.push(value):$scope.filter.selection[column].unselected.splice(idx,1),$scope.applyFilters()},$scope.fromDateUpdate=function(fromDate,column){$scope.filter.date[column].from=$filter("date")(fromDate,"yyyy-MM-dd HH:mm:ss"),$scope.applyFilters()},$scope.toDateUpdate=function(toDate,column){$scope.filter.date[column].to=$filter("date")(toDate,"yyyy-MM-dd HH:mm:ss"),$scope.applyFilters()},$scope.applyFilters=function(){$scope.filteredValues=[];for(var i=0;i<$scope.values.length;i++){for(var bAdd=!0,j=0;j<$scope.columns.length;j++){var column=$scope.columns[j],value=$scope.values[i][column.title];if("selection"==column.type||"radioList"==column.type)-1!=$scope.filter.selection[column.title].unselected.indexOf(value)&&(bAdd=!1);else if("number"==column.type){var lessThan=$scope.filter.number[column.title].lesserThan,greaterThan=$scope.filter.number[column.title].greaterThan;"-"==value&&(lessThan||greaterThan)?bAdd=!1:(lessThan&&value>lessThan||greaterThan&&value<greaterThan)&&(bAdd=!1)}else if("text"==column.type){var searchText=$scope.filter.text[column.title].search;searchText&&-1==value.toLowerCase().search(searchText.toLowerCase())&&(bAdd=!1)}else if("date"==column.type){var from=$scope.filter.date[column.title].from,to=$scope.filter.date[column.title].to;(from&&value<from||to&&value>to)&&(bAdd=!1)}}bAdd&&$scope.filteredValues.push($scope.values[i])}$scope.filteredValues=$filter("orderBy")($scope.filteredValues,$scope.filter.sort)},$scope.toggleColumns=function(){DialogService.toggleColumns($scope.columns,function(columns){$scope.columns=columns})},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_LEADS],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_REPORT],$scope.values=[],$scope.columns=[],$scope.filteredValues=[],$scope.resetFilters(),$scope.init=function(){$rootScope.showWaitingDialog("Please wait while we are fetching lead report..."),$http({method:"GET",url:"/api/reports/lead",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.columns=[],$scope.values=[],$scope.filteredValues=[];for(var columns=response.data.columns,i=0;i<columns.length;i++){(column=columns[i]).show=!0,$scope.columns.push(column)}var values=response.data.values;for(i=0;i<values.length;i++){for(var row={},j=0;j<$scope.columns.length;j++){var column;row[(column=$scope.columns[j]).title]=values[i][j]}$scope.values.push(row)}$scope.filteredValues=$scope.values,$scope.resetFilters()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load report !!!")})},$scope.init(),$("body").on("click",function(e){$(".dropdown.dropdown-multiselect").is(e.target)||0!==$(".dropdown.dropdown-multiselect").has(e.target).length||0!==$(".show").has(e.target).length||$(".dropdown.dropdown-multiselect .dropdown-menu").removeClass("show")}),$(".dropdown.dropdown-multiselect > button").on("click",function(e){$($(this).parent()).find(".dropdown-menu").toggleClass("show")})}),app.controller("TaskManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService){function initTasks(){$rootScope.showWaitingDialog("Please wait while we are fetching tasks..."),$http({method:"GET",url:"/api/users/task",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),vm.tasks=response.data,vm.selection=[],vm.tasks.forEach(function(){vm.selection.push(!1)})},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load tasks !!!")})}var vm=this;vm.add=function(){DialogService.taskCreator([{}],initTasks)},vm.toggleAll=function(){for(var i=0;i<vm.selection.length;i++)vm.selection[i]=vm.bCheckAll},vm.getSelectedItems=function(){for(var selectedItems=[],i=0;i<vm.selection.length;i++)vm.selection[i]&&selectedItems.push(vm.tasks[i]);return selectedItems},vm.close=function(){DialogService.confirm("Are you sure you want to close these "+vm.getSelectedItems().length+" tasks ?",function(){$rootScope.showWaitingDialog("Closing Tasks..."),$http({method:"POST",url:"/api/users/task/close",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:vm.getSelectedItems()}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Tasks closed..."),initTasks()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to close tasks!!!"),initTasks()})})},vm.remove=function(){DialogService.confirm("Are you sure you want to remove these "+vm.getSelectedItems().length+" tasks ?",function(){$rootScope.showWaitingDialog("Removing Tasks..."),$http({method:"POST",url:"/api/users/task/remove",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:vm.getSelectedItems()}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Tasks removed successfully..."),initTasks()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to remove tasks!!!"),initTasks()})})},vm.stopRenewal=function(){DialogService.confirm("Are you sure you want to stop renewal for "+vm.getSelectedItems().length+" tasks ?",function(){$rootScope.showWaitingDialog("Stopping renewal period..."),$http({method:"POST",url:"/api/users/task/stoprenew",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:vm.getSelectedItems()}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("renewal period stopped..."),initTasks()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to stop renewal!!!"),initTasks()})})},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_TASKS],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE],vm.tasks=[],vm.selection=[],vm.bCheckAll=!1,initTasks()}),app.controller("TeamManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService){function init(){$rootScope.showWaitingDialog("Please wait while we are fetching team details..."),$http({method:"GET",url:"/api/users/team",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),vm.team=response.data,vm.selection=[],vm.team.forEach(function(){vm.selection.push(!1)})},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load team !!!")})}var vm=this;vm.add=function(){DialogService.addRep(init)},vm.track=function(){DialogService.liveTracking(vm.getSelectedItems())},vm.toggleAll=function(){for(var i=0;i<vm.selection.length;i++)vm.selection[i]=vm.bCheckAll},vm.getSelectedItems=function(){for(var selectedItems=[],i=0;i<vm.selection.length;i++)vm.selection[i]&&selectedItems.push(vm.team[i]);return selectedItems},vm.remove=function(){DialogService.confirm("Are you sure you want to remove these "+vm.getSelectedItems().length+" members from your team ?",function(){$rootScope.showWaitingDialog("Please wait while we are removing members..."),$http({method:"POST",url:"/api/users/team/remove",headers:{"X-Auth-Token":$localStorage.accessToken},data:{reps:JSON.stringify(vm.getSelectedItems())}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Reps removed..."),init()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to remove reps!!!"),init()})})},vm.createtasks=function(){var task=[];vm.selection.forEach(function(bSelected,i){bSelected&&task.push({rep:vm.team[i]})}),DialogService.taskCreator(task)},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_TEAM],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE],vm.team=[],vm.selection=[],vm.bCheckAll=!1,init()}),app.controller("TeamReportCtrl",function($scope,$rootScope,$http,$localStorage,$state,$window,$filter,ExcelService,DialogService){$scope.export=function(){$scope.filteredValues.length?ExcelService.export($scope.filteredValues,$scope.columns,"Team-Report"):ToastService.toast("Nothing to export !!!")},$scope.showImage=function(filename){$window.open($state.href("photos",{name:filename}),"_blank")},$scope.showLocation=function(latlng){var latLngArr=latlng.split(",");DialogService.locationViewer(latLngArr[0],latLngArr[1])},$scope.resetFilters=function(){$scope.filter={selection:{},text:{},number:{},date:{},sort:[]},function(){for(var i=0;i<$scope.columns.length;i++){var column=$scope.columns[i];if("selection"==column.type||"radioList"==column.type){var selectFilter={};selectFilter.options=[],selectFilter.unselected=[];for(var j=0;j<$scope.values.length;j++){var value=$scope.values[j][column.title];-1==selectFilter.options.indexOf(value)&&selectFilter.options.push(value)}$scope.filter.selection[column.title]=selectFilter}else"number"==column.type?$scope.filter.number[column.title]={}:"text"==column.type?$scope.filter.text[column.title]={}:"date"==column.type&&($scope.filter.date[column.title]={})}}()},$scope.filterSort=function(property,bReverse){bReverse?(-1!=$scope.filter.sort.indexOf(property)&&$scope.filter.sort.splice($scope.filter.sort.indexOf(property),1),property="-"+property):-1!=$scope.filter.sort.indexOf("-"+property)&&$scope.filter.sort.splice($scope.filter.sort.indexOf("-"+property),1),-1!=$scope.filter.sort.indexOf(property)?$scope.filter.sort.splice($scope.filter.sort.indexOf(property),1):$scope.filter.sort.push(property),$scope.applyFilters()},$scope.filterSelect=function(column,value){var idx=$scope.filter.selection[column].unselected.indexOf(value);-1==idx?$scope.filter.selection[column].unselected.push(value):$scope.filter.selection[column].unselected.splice(idx,1),$scope.applyFilters()},$scope.fromDateUpdate=function(fromDate,column){$scope.filter.date[column].from=$filter("date")(fromDate,"yyyy-MM-dd HH:mm:ss"),$scope.applyFilters()},$scope.toDateUpdate=function(toDate,column){$scope.filter.date[column].to=$filter("date")(toDate,"yyyy-MM-dd HH:mm:ss"),$scope.applyFilters()},$scope.applyFilters=function(){$scope.filteredValues=[];for(var i=0;i<$scope.values.length;i++){for(var row=$scope.values[i],bAdd=!0,j=0;j<$scope.columns.length;j++){var column=$scope.columns[j],value=row[column.title];if("selection"==column.type||"radioList"==column.type)-1!=$scope.filter.selection[column.title].unselected.indexOf(value)&&(bAdd=!1);else if("number"==column.type){var lessThan=$scope.filter.number[column.title].lesserThan,greaterThan=$scope.filter.number[column.title].greaterThan;"-"==value&&(lessThan||greaterThan)?bAdd=!1:(lessThan&&value>lessThan||greaterThan&&value<greaterThan)&&(bAdd=!1)}else if("text"==column.type){var searchText=$scope.filter.text[column.title].search;searchText&&-1==value.toLowerCase().search(searchText.toLowerCase())&&(bAdd=!1)}else if("date"==column.type){var from=$scope.filter.date[column.title].from,to=$scope.filter.date[column.title].to;(from&&value<from||to&&value>to)&&(bAdd=!1)}}bAdd&&$scope.filteredValues.push(row),$scope.filteredValues=$filter("orderBy")($scope.filteredValues,$scope.filter.sort)}},$scope.toggleColumns=function(){DialogService.toggleColumns($scope.columns,function(columns){$scope.columns=columns})},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_TEAM],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_REPORT],$scope.values=[],$scope.columns=[],$scope.filteredValues=[],$scope.resetFilters(),$scope.init=function(){$rootScope.showWaitingDialog("Please wait while we are fetching team report..."),$http({method:"GET",url:"/api/reports/team",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.columns=[],$scope.values=[],$scope.filteredValues=[];for(var columns=response.data.columns,i=0;i<columns.length;i++){(column=columns[i]).show=!0,$scope.columns.push(column)}var values=response.data.values;for(i=0;i<values.length;i++){for(var row={},j=0;j<$scope.columns.length;j++){var column;row[(column=$scope.columns[j]).title]=values[i][j]}$scope.values.push(row)}$scope.filteredValues=$scope.values,$scope.resetFilters()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load report !!!")})},$scope.init(),$("body").on("click",function(e){$(".dropdown.dropdown-multiselect").is(e.target)||0!==$(".dropdown.dropdown-multiselect").has(e.target).length||0!==$(".show").has(e.target).length||$(".dropdown.dropdown-multiselect .dropdown-menu").removeClass("show")}),$(".dropdown.dropdown-multiselect > button").on("click",function(e){$($(this).parent()).find(".dropdown-menu").toggleClass("show")})}),app.controller("DashboardCtrl",function($scope,$rootScope,$state,$window,$localStorage,AuthService,DialogService){$scope.nav={},$scope.name=$localStorage.name,$scope.logout=function(){$rootScope.showWaitingDialog("Please wait while you are being logged out..."),AuthService.logout().then(function(response){$rootScope.hideWaitingDialog(),$localStorage.accessToken="",$state.go("home")},function(error){$rootScope.hideWaitingDialog(),console.log(error)})},$scope.changePassword=function(){DialogService.changePassword()},$scope.openHelp=function(){$window.open($state.href("help"),"_blank")},$scope.optionClicked=function(state){$state.go(state)}}),app.controller("AddRepCtrl",function($scope,$rootScope,$http,$localStorage,$mdDialog,ToastService,teamUpdateCb){$scope.add=function(){if(function(){var bValid=!0;return $scope.bNameError=!1,$scope.bPhoneError=!1,$scope.name||(bValid=!1,$scope.bNameError=!0),$scope.phoneNumber||(bValid=!1,$scope.bPhoneError=!0),bValid||ToastService.toast("Please fill all fields."),bValid}()){var phone;phone=$scope.countryCode?"+"+$scope.countryCode+$scope.phoneNumber:"+91"+$scope.phoneNumber;var email=$scope.email?$scope.email:"";$rootScope.showWaitingDialog("Please wait while we are adding rep..."),$http({method:"POST",url:"/api/users/team",headers:{"X-Auth-Token":$localStorage.accessToken},data:{name:$scope.name,phoneNumber:phone,email:email}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("An SMS has been sent to the rep..."),teamUpdateCb()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to add rep"),console.log(error)})}},$scope.cancel=function(){$mdDialog.hide()}}),app.controller("AlertCtrl",function($scope,$mdDialog,message){$scope.message=message,$scope.ok=function(){$mdDialog.hide()}}),app.controller("ChangePasswordCtrl",function($scope,$rootScope,$mdDialog,$localStorage,$http,ToastService){$scope.change=function(){($scope.oldPassword&&$scope.newPassword&&$scope.confirmPassword?$scope.newPassword!=$scope.confirmPassword&&(ToastService.toast("New and confirmed passwords do not match !!!"),1):($scope.bShowError=!0,ToastService.toast("Please fill all fields !!!"),1))||($rootScope.showWaitingDialog("Please wait while we update your password..."),$http({method:"POST",url:"/api/users/changePassword",headers:{"X-Auth-Token":$localStorage.accessToken},data:{oldPassword:$scope.oldPassword,newPassword:$scope.newPassword}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Your password has been updated...")},function(error){$rootScope.hideWaitingDialog(),400==error.status&&ToastService.toast("Incorrect current password entered...")}))},$scope.close=function(){$mdDialog.hide()},$scope.bShowError=!1}),app.controller("ConfirmCtrl",function($scope,$mdDialog,message,yesCb){$scope.message=message,$scope.yes=function(){$mdDialog.hide(),yesCb()},$scope.no=function(){$mdDialog.hide()}}),app.controller("EmailVerifyCtrl",function($scope,$rootScope,$mdDialog,AuthService,DialogService,ToastService,name,email,password){$scope.emailVerify=function(){($scope.otp?$scope.otp!=otp_gen&&($scope.bShowError=!0,ToastService.toast("Invalid OTP Entered"),1):($scope.bShowError=!0,ToastService.toast("Please enter the OTP sent to Email ID provided"),1))||($rootScope.showWaitingDialog("Please wait while you are being registered..."),AuthService.register(name,email,password).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Registered successfully..."),DialogService.login()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to register..."),DialogService.register(name,email,password)}))},$scope.cancel=function(){$mdDialog.hide()},$scope.bShowError=!1;var otp_gen;otp_gen=Math.floor(1e5+9e5*Math.random()),$rootScope.showWaitingDialog("Please wait while OTP is sent to mail ID"),AuthService.emailOtp(otp_gen,email).then(function(response){ToastService.toast("Email Sent Successfully."),$rootScope.hideWaitingDialog()},function(error){ToastService.toast("Error While Sending OTP to Email."),$rootScope.hideWaitingDialog(),DialogService.register(name,email,password)})}),app.controller("FormEditorCtrl",function($scope,$rootScope,$http,$localStorage,$mdDialog,ToastService,form,updateCb){$scope.save=function(){(function(){var toastMessage="";if($scope.form.name)if(-1!=$scope.formNames.indexOf($scope.form.name))toastMessage="Duplicate template name found...";else if($scope.form.data.length)for(var i=0;i<$scope.form.data.length;i++){var field=$scope.form.data[i];if(field.title?$scope.isDupeFieldTitle(field.title)?toastMessage="Field titles must be unique...":field.type?"number"==field.type&&"null"==field.value?toastMessage="Please fill mandatory values...":"radioList"==field.type?field.value.options.length?$scope.checkDupes(field.value.options)?toastMessage="Option names must be unique...":-1!=field.value.options.indexOf("")?toastMessage="Please enter valid option name...":field.value.selection||(toastMessage="Please select atleast one option in radio list..."):toastMessage="Please add atleast 1 option to list...":"checkList"==field.type&&(field.value.options.length?$scope.checkDupes(field.value.options)?toastMessage="Option names must be unique...":-1!=field.value.options.indexOf("")&&(toastMessage="Please enter valid option name..."):toastMessage="Please add atleast 1 option to list..."):toastMessage="Field type cannot be empty...":toastMessage="Field Title cannot be empty...",toastMessage.length)break}else toastMessage="Please add atleast 1 field...";else toastMessage="Please fill template name...";return toastMessage.length?(ToastService.toast(toastMessage),$scope.bShowError=!0):$scope.bShowError=!1,!$scope.bShowError})()&&($rootScope.showWaitingDialog("Please wait while form is being saved..."),$http({method:"POST",url:"/api/users/form",headers:{"X-Auth-Token":$localStorage.accessToken},data:{form:$scope.form}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Form saved successfully..."),updateCb()},function(error){$rootScope.hideWaitingDialog(),console.log(error),ToastService.toast("Could not save form...")}))},$scope.close=function(){$mdDialog.hide()},$scope.radioOptionChanged=function(field,newOption,oldOption){field.value.selection==oldOption&&(field.value.selection=newOption)},$scope.radioOptionRemove=function(field,index){field.value.selection==field.value.options[index]&&(field.value.selection=""),field.value.options.splice(index,1)},$scope.updateFieldType=function(field,type){field.type!=type&&("text"==type||"photo"==type||"signature"==type?field.value="":"number"==type?field.value=0:"radioList"!=type&&"checkList"!=type||(field.value={selection:[],options:[]}),field.type=type)},$scope.checkDupes=function(array){for(var copiedArray=array.concat().sort(),i=0;i<copiedArray.length-1;i++)if(copiedArray[i+1]==copiedArray[i]&&copiedArray[i].length)return!0;return!1},$scope.isDupeFieldTitle=function(title){if(!title)return!1;var count=0;return $scope.form.data.forEach(function(field){field.title==title&&count++}),count>1},$scope.form={},$scope.formNames=[],$scope.bShowError=!1,$scope.form=form,$scope.form||($scope.form={name:"",data:[]}),$http({method:"GET",url:"/api/users/form",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){response.data.forEach(function(form){$scope.form.id!=form.id&&$scope.formNames.push(form.name)})},function(error){console.log(error)})}),app.controller("LeadEditorCtrl",function($scope,$rootScope,$mdDialog,$http,$localStorage,ToastService,GoogleApiService,ExcelService,leads,leadUpdateCb){function scrollList(index){var list=$(".dialog-container .list-group")[0],items=$(list).find(".list-group-item"),scrollingOffset=0;index>=items.length?scrollingOffset=$(document).height():index>0&&(scrollingOffset=$(items[index]).offset().top-$(items[0]).offset().top),$(list).animate({scrollTop:scrollingOffset})}$scope.add=function(){var lead={latitude:googleMap.getCenter().lat(),longitude:googleMap.getCenter().lng()};$scope.leads.push(lead),$scope.listItemClick(lead),scrollList($scope.leads.length)},$scope.listItemClick=function(lead){$scope.selectedLead=lead,$scope.searchResults=[],googleMap&&googleMap.panTo(new google.maps.LatLng(lead.latitude,lead.longitude))},$scope.remove=function(lead){var idx=$scope.leads.indexOf(lead);idx>=0&&$scope.leads.splice(idx,1)},$scope.searchAddress=function(){$scope.selectedLead.address&&($scope.bSearchWaiting=!0,$scope.searchResults=[],GoogleApiService.autoComplete($scope.selectedLead.address,function(results){$scope.searchResults=results,$scope.bSearchWaiting=!1},function(){$scope.bSearchWaiting=!1}))},$scope.searchResultClick=function(searchResult){$scope.selectedLead.address=searchResult.address,$scope.selectedLead.latitude=0,$scope.selectedLead.longitude=0,GoogleApiService.addressToLatlng(searchResult.address,function(lat,lng){$scope.selectedLead.latitude=lat,$scope.selectedLead.longitude=lng,googleMap.panTo(new google.maps.LatLng(lat,lng))})},$scope.save=function(){(function(){if($scope.bShowError=!1,0==$scope.leads.length)return ToastService.toast("Please add some leads to save..."),!1;for(var i=0;i<$scope.leads.length;i++){var lead=$scope.leads[i];if(!$scope.isLeadValid(lead))return $scope.bShowError=!0,scrollList(i),ToastService.toast("Please fill all fields in leads..."),!1}return!0})()&&($rootScope.showWaitingDialog("Please wait while leads are added..."),$http({method:"POST",url:"/api/users/lead",headers:{"X-Auth-Token":$localStorage.accessToken},data:{leads:JSON.stringify($scope.leads)}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Leads added succesfully..."),leadUpdateCb()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to update leads !!!"),console.log(error)}))},$scope.isLeadValid=function(lead){return lead.title&&lead.phoneNumber&&lead.latitude&&lead.longitude&&lead.address},$scope.mapInitialized=function(map){if(googleMap=map,$scope.leads.length){var bounds=new google.maps.LatLngBounds;$scope.leads.forEach(function(lead){bounds.extend(new google.maps.LatLng(lead.latitude,lead.longitude))}),googleMap.fitBounds(bounds)}else $scope.add();google.maps.event.trigger(googleMap,"resize"),$scope.$apply()},$scope.getMarkerIcon=function(lead){return $scope.selectedLead==lead?{url:"/static/images/marker_selected.png",scaledSize:[40,40]}:{url:"/static/images/marker_default.png",scaledSize:[40,40]}},$scope.markerClicked=function(e,lead){$scope.listItemClick(lead),scrollList($scope.leads.indexOf(lead))},$scope.markerDragged=function(e,lead){lead.latitude=e.latLng.lat(),lead.longitude=e.latLng.lng(),lead.address="",GoogleApiService.latlngToAddress(lead.latitude,lead.longitude,function(address){lead.address=address})},$scope.excelRead=function(workbook){$rootScope.showWaitingDialog("Please wait while we are reading from excel file..."),ExcelService.excelRead(workbook).then(function(response){$rootScope.hideWaitingDialog(),response.data.forEach(function(lead){$scope.leads.push(lead)});for(var i=$scope.leads.length-1;i>=0;i--){var lead=$scope.leads[i];lead.title||lead.description||lead.phoneNumber||lead.address||$scope.leads.splice(i,1)}},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to parse uploaded file. Please make sure file is as per template.")})},$scope.excelError=function(e){ToastService.toast("Invalid file for uploading leads...")},$scope.uploadTemplate=function(){ExcelService.leadUploadTemplate()},$scope.cancel=function(){$mdDialog.hide()},$scope.leads=[],$scope.selectedLead={},$scope.bShowError=!1,$scope.searchResults=[],$scope.bSearchWaiting=!1,$scope.mapCenter=[21,79],$scope.mapZoom=4;var googleMap=null;leads&&($scope.leads=leads,$scope.selectedLead=$scope.leads[0])}),app.controller("LiveTrackingCtrl",function($scope,$rootScope,$http,$mdDialog,$interval,$localStorage,ToastService,reps){function refreshData(){$http({method:"GET",url:"/api/track/data",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){response.data.forEach(function(serverData){$scope.trackees.forEach(function(currentData){currentData.id==serverData.id&&(currentData.latitude=serverData.latitude,currentData.longitude=serverData.longitude,currentData.lastUpdated=serverData.lastUpdated,currentData.speed=serverData.speed,currentData.status=serverData.status)})})},function(error){})}$scope.refreshReps=function(){var unAvReps=[];$scope.trackees.forEach(function(trackee){trackee.status==Constants.Tracking.STATUS_UNAVAILABLE&&unAvReps.push(trackee.id)}),unAvReps.length>0&&$http({method:"POST",url:"/api/track/refresh",headers:{"X-Auth-Token":$localStorage.accessToken},data:{reps:unAvReps}}).then(function(response){},function(error){})},$scope.mapInitialized=function(map){googleMap=map,google.maps.event.trigger(googleMap,"resize"),$scope.$apply()},$scope.listItemClick=function(trackee){$scope.selectedTrackee=trackee},$scope.markerClick=function(event,trackee){$scope.listItemClick(trackee)},$scope.cancel=function(){$interval.cancel(refreshCb),$rootScope.showWaitingDialog("Stopping Live tracking..."),$http({method:"POST",url:"/api/track/stop",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide()},function(error){$rootScope.hideWaitingDialog(),$mdDialog.hide()})},$scope.trackees=[],$scope.selectedTrackee={};var refreshCb;$scope.mapZoom=14;var googleMap=null;reps.forEach(function(rep){$scope.trackees.push({id:rep.id,name:rep.name,phone:rep.phoneNumber,latitude:0,longitude:0,lastUpdated:0,speed:0,status:Constants.Tracking.STATUS_WAITING})}),$scope.selectedTrackee=$scope.trackees[0],$rootScope.showWaitingDialog("Starting Live Tracking..."),$http({method:"POST",url:"/api/track/start",headers:{"X-Auth-Token":$localStorage.accessToken},data:{reps:reps}}).then(function(response){$rootScope.hideWaitingDialog(),refreshCb=$interval(refreshData,1e3)},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to start live tracking...")})}),app.controller("LocationViewerCtrl",function($scope,latitude,longitude){$scope.markerLocation={latitude:latitude,longitude:longitude},$scope.mapZoom=14,$scope.mapInitialized=function(map){google.maps.event.trigger(map,"resize"),map.setCenter(new google.maps.LatLng($scope.markerLocation.latitude,$scope.markerLocation.longitude)),$scope.$apply()}}),app.controller("LoginCtrl",function($scope,$rootScope,$mdDialog,$state,$http,$localStorage,$cookies,AuthService,DialogService,ToastService){$scope.login=function(){(!$scope.email||!$scope.password)&&($scope.bShowError=!0,ToastService.toast("Please fill all fields !!!"),1)||($rootScope.showWaitingDialog("Please wait while we log you in..."),AuthService.login($scope.email,$scope.password).then(function(response){$localStorage.accessToken=response.data.accessToken,$localStorage.name=response.data.name,$scope.bRemember?($cookies.put("Navm8Email",$scope.email),$cookies.put("Navm8Password",$scope.password)):($cookies.remove("Navm8Email"),$cookies.remove("Navm8Password")),$rootScope.hideWaitingDialog(),$mdDialog.hide(),$state.go("dashboard.team-manage")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Invalid Credentials...")}))},$scope.forgotPassword=function(){$scope.email?($rootScope.showWaitingDialog("Please wait while we email your password.."),$http({method:"POST",url:"/api/auth/forgotPassword",data:{email:$scope.email}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Your password has been mailed to your email ID...")},function(error){$rootScope.hideWaitingDialog(),400==error.status?ToastService.toast("Unknown email provided..."):ToastService.toast("Unable to email your password...")})):ToastService.toast("Please enter a valid Email Id...")},$scope.register=function(){DialogService.register("","","")},$scope.cancel=function(){$mdDialog.hide()},$scope.bShowError=!1,$scope.bRemember=!1,$scope.email="",$scope.password="";var savedEmail=$cookies.get("Navm8Email"),savedPassword=$cookies.get("Navm8Password");(savedEmail||savedPassword)&&($scope.bRemember=!0,$scope.email=savedEmail,$scope.password=savedPassword)}),app.controller("RegisterCtrl",function($scope,$rootScope,$mdDialog,AuthService,DialogService,ToastService,name,email,password){$scope.register=function(){($scope.email&&$scope.password&&$scope.name&&$scope.confirmPassword?$scope.password!=$scope.confirmPassword?(ToastService.toast("Passwords do not match !!!"),1):(-1==$scope.email.indexOf("@")||-1==$scope.email.indexOf("."))&&(ToastService.toast("Invalid Email"),1):($scope.bShowError=!0,ToastService.toast("Please fill all fields !!!"),1))||DialogService.emailVerify($scope.name,$scope.email,$scope.password)},$scope.cancel=function(){$mdDialog.hide()},$scope.bShowError=!1,$scope.name=name,$scope.email=email,$scope.password=password,$scope.confirmPassword=password}),app.controller("TaskCreatorCtrl",function($scope,$rootScope,$http,$localStorage,$state,$mdDialog,ToastService,taskAddedCb,tasks){$scope.tasks=tasks,$scope.leads=[],$scope.team=[],$scope.formTemplates=[],$rootScope.showWaitingDialog("Please wait while we are fetching information.."),$http({method:"GET",url:"/api/users/lead",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.leads=response.data},function(error){$rootScope.hideWaitingDialog(),console.log(error)}),$http({method:"GET",url:"/api/users/team",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$scope.team=response.data},function(error){console.log(error)}),$http({method:"GET",url:"/api/users/form",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$scope.formTemplates=response.data},function(error){console.log(error)}),$scope.add=function(){$scope.tasks.push({})},$scope.create=function(){(function(){var bValid=!0;return $scope.bShowError=!1,0==$scope.tasks.length?(ToastService.toast("Add some tasks to create..."),bValid=!1):($scope.tasks.forEach(function(task){task.lead&&task.rep&&task.template||(bValid=!1,$scope.bShowError=!0)}),bValid||ToastService.toast("Please fill all fields")),bValid})()&&($rootScope.showWaitingDialog("Please wait while task is created..."),$http({method:"POST",url:"/api/users/task",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:JSON.stringify($scope.tasks)}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Tasks Created successfully..."),taskAddedCb()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to create tasks...")}))},$scope.remove=function(task){var idx=$scope.tasks.indexOf(task);idx>=0&&$scope.tasks.splice(idx,1)},$scope.cancel=function(){$mdDialog.hide()}}),app.controller("ToggleColumnsCtrl",function($scope,$mdDialog,columns,resultCb){var vm=this;vm.done=function(){resultCb(vm.columns),$mdDialog.hide()},vm.toggleAll=function(){for(var i=0;i<vm.columns.length;i++)vm.columns[i].show=vm.bCheckAll},vm.moveUp=function(index){index>0&&vm.columns.move(index,index-1)},vm.moveDown=function(index){index<vm.columns.length-1&&vm.columns.move(index,index+1)},vm.columns=columns}),app.controller("HelpCtrl",function($scope,$location,$anchorScroll){$scope.scrollTo=function(id){$location.hash(id),$anchorScroll()}}),app.controller("HomeCtrl",function($scope,$window,$state,DialogService){$scope.login=function(){DialogService.login()},$scope.register=function(){DialogService.register("","","")},$scope.explore=function(){$("#div_feature").is(":hidden")?($("#div_feature").show(2e3),$("#btn_explore").text("Hide Features")):($("#div_feature").slideUp(3e3),$("#btn_explore").text("Explore Features"))},$scope.downloadApp=function(){$window.location.href="https://play.google.com/store/apps/details?id=com.biz.navimate"},$scope.facebook=function(){$window.location.href="https://www.facebook.com/navimateapp/"},$state.params.login&&DialogService.login()}),app.controller("IndexCtrl",function($scope,$rootScope){$rootScope.Constants=Constants,$scope.waiting={bShow:!1,message:""},$rootScope.showWaitingDialog=function(message){$scope.waiting.message=message,$scope.waiting.bShow=!0},$rootScope.hideWaitingDialog=function(){$scope.waiting.bShow=!1},$rootScope.APIs={absorbEvent:function(event){event.stopPropagation()}},Array.prototype.move=function(old_index,new_index){if(new_index>=this.length)for(var k=new_index-this.length;1+k--;)this.push(void 0);this.splice(new_index,0,this.splice(old_index,1)[0])}}),app.controller("PhotosCtrl",function($scope,$rootScope,$localStorage,$stateParams,$http){$scope.image=[],$scope.bError=!1,function(){var photoName=$stateParams.name;photoName?($rootScope.showWaitingDialog("Getting Photo.."),$http({method:"GET",url:"/api/photos/get",headers:{"X-Auth-Token":$localStorage.accessToken},params:{filename:photoName}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.image=response.data.image},function(error){$rootScope.hideWaitingDialog(),$scope.bError=!0})):$scope.bError=!0}()});var Constants={};Constants.Tracking={STATUS_UNAVAILABLE:0,STATUS_WAITING:1,STATUS_AVAILABLE:2},Constants.Form={Types:["text","number","radioList","checkList","photo","signature"]},Constants.DashboardNav={ITEM_TEAM:0,ITEM_LEADS:1,ITEM_TASKS:2,ITEM_FORMS:3,OPTION_MANAGE:0,OPTION_REPORT:1},Constants.DashboardNav.Options=[{id:Constants.DashboardNav.OPTION_MANAGE,name:"Manage",state:"manage"},{id:Constants.DashboardNav.OPTION_REPORT,name:"Reports",state:"report"}],Constants.DashboardNav.Menu=[{id:Constants.DashboardNav.ITEM_TEAM,name:"Team",state:"team",options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE],Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_REPORT]]},{id:Constants.DashboardNav.ITEM_LEADS,name:"Leads",state:"leads",options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE],Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_REPORT]]},{id:Constants.DashboardNav.ITEM_TASKS,name:"Tasks",state:"tasks",options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE]]},{id:Constants.DashboardNav.ITEM_FORMS,name:"Forms",state:"forms",options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE]]}],app.service("AuthService",function($http,$localStorage){this.register=function(name,email,password){return $http({method:"POST",url:"/api/auth/register",data:{name:name,email:email,password:password}})},this.login=function(email,password){return $http({method:"POST",url:"/api/auth/login",data:{email:email,password:password}})},this.logout=function(){return $http({method:"GET",url:"/api/auth/logout",headers:{"X-Auth-Token":$localStorage.accessToken}})},this.emailOtp=function(otp,email){return $http({method:"POST",url:"/api/auth/email",headers:{"X-Auth-Token":$localStorage.accessToken},data:{otp:otp,email:email}})}}),app.service("DialogService",function($mdDialog){this.alert=function(message){$mdDialog.show({templateUrl:"/static/views/dialogs/Alert.html",controller:"AlertCtrl",clickOutsideToClose:!0,locals:{message:message}})},this.confirm=function(message,yesCb){$mdDialog.show({templateUrl:"/static/views/dialogs/Confirm.html",controller:"ConfirmCtrl",clickOutsideToClose:!0,locals:{message:message,yesCb:yesCb}})},this.login=function(){$mdDialog.show({templateUrl:"/static/views/dialogs/Login.html",controller:"LoginCtrl",clickOutsideToClose:!0})},this.register=function(name,email,password){$mdDialog.show({templateUrl:"/static/views/dialogs/Register.html",controller:"RegisterCtrl",clickOutsideToClose:!0,locals:{name:name,email:email,password:password}})},this.addRep=function(teamUpdateCb){$mdDialog.show({templateUrl:"/static/views/dialogs/AddRep.html",controller:"AddRepCtrl",clickOutsideToClose:!0,locals:{teamUpdateCb:teamUpdateCb}})},this.taskCreator=function(tasks,taskAddedCb){$mdDialog.show({templateUrl:"/static/views/dialogs/TaskCreator.html",controller:"TaskCreatorCtrl",clickOutsideToClose:!0,locals:{tasks:tasks,taskAddedCb:taskAddedCb}})},this.leadEditor=function(leads,leadUpdateCb){$mdDialog.show({templateUrl:"/static/views/dialogs/LeadEditor.html",controller:"LeadEditorCtrl",clickOutsideToClose:!0,locals:{leads:leads,leadUpdateCb:leadUpdateCb}})},this.formEditor=function(form,updateCb){$mdDialog.show({templateUrl:"/static/views/dialogs/FormEditor.html",controller:"FormEditorCtrl",clickOutsideToClose:!0,locals:{form:form,updateCb:updateCb}})},this.liveTracking=function(reps){$mdDialog.show({templateUrl:"/static/views/dialogs/LiveTracking.html",controller:"LiveTrackingCtrl",clickOutsideToClose:!1,locals:{reps:reps}})},this.emailVerify=function(name,email,password){$mdDialog.show({templateUrl:"/static/views/dialogs/EmailVerify.html",controller:"EmailVerifyCtrl",clickOutsideToClose:!1,locals:{name:name,email:email,password:password}})},this.toggleColumns=function(columns,resultCb){$mdDialog.show({templateUrl:"/static/views/dialogs/ToggleColumns.html",controller:"ToggleColumnsCtrl as $ctrl",clickOutsideToClose:!0,locals:{columns:columns,resultCb:resultCb}})},this.changePassword=function(){$mdDialog.show({templateUrl:"/static/views/dialogs/ChangePassword.html",controller:"ChangePasswordCtrl",clickOutsideToClose:!0})},this.locationViewer=function(latitude,longitude){$mdDialog.show({templateUrl:"/static/views/dialogs/LocationViewer.html",controller:"LocationViewerCtrl",clickOutsideToClose:!0,locals:{latitude:latitude,longitude:longitude}})}}),app.service("ExcelService",function($http,$localStorage,$filter,FileSaver,Blob){function s2ab(s){if("undefined"!=typeof ArrayBuffer){for(var buf=new ArrayBuffer(s.length),view=new Uint8Array(buf),i=0;i!=s.length;++i)view[i]=255&s.charCodeAt(i);return buf}for(buf=new Array(s.length),i=0;i!=s.length;++i)buf[i]=255&s.charCodeAt(i);return buf}this.excelRead=function(workbook){var worksheet=workbook.Sheets[workbook.SheetNames[0]],range=XLSX.utils.decode_range(worksheet["!ref"]),rows=[];for(row=range.s.r;row<=range.e.r;row++){var cols=[];for(col=range.s.c;col<=range.e.c;col++){var cell=worksheet[XLSX.utils.encode_cell({r:row,c:col})];cell?cols.push(cell.v):cols.push("")}rows.push(cols)}return $http({method:"POST",url:"/api/leads/upload",headers:{"X-Auth-Token":$localStorage.accessToken},data:{excelData:JSON.stringify(rows)}})},this.export=function(values,columns,fileNamePrefix){for(var json=[],i=0;i<values.length;i++){var row=values[i];json.push({});for(var j=0;j<columns.length;j++){var column=columns[j];column.show&&("location"==column.type&&"-"!=row[column.title]?json[json.length-1][column.title]="https://www.google.com/maps/search/?api=1&query="+row[column.title]:"photo"!=column.type&&"signature"!=column.type||"-"==row[column.title]?json[json.length-1][column.title]=row[column.title]:json[json.length-1][column.title]="https://biz.navimateapp.com/#/photos?name="+row[column.title])}}var ws=XLSX.utils.json_to_sheet(json),wb={SheetNames:[],Sheets:{}};XLSX.utils.book_append_sheet(wb,ws,"Sheet 1");var wbOut=XLSX.write(wb,{bookType:"xlsx",bookSST:!0,type:"binary"}),blob=new Blob([s2ab(wbOut)],{type:"application/octet-stream"}),fileName=fileNamePrefix+function(){var timestamp=new Date;return timestamp=$filter("date")(timestamp,"-dd-MM-yy-HHmm")}()+".xlsx";try{FileSaver.saveAs(blob,fileName)}catch(e){console.log(e,wbOut)}},this.leadUploadTemplate=function(){var ws=XLSX.utils.json_to_sheet([{"Title*":"","Phone*":"","Address*":"",Description:"",Email:"",Latitude:"",Longitude:""}]),wb={SheetNames:[],Sheets:{}};XLSX.utils.book_append_sheet(wb,ws,"Sheet 1");var wbOut=XLSX.write(wb,{bookType:"xlsx",bookSST:!0,type:"binary"}),blob=new Blob([s2ab(wbOut)],{type:"application/octet-stream"});try{FileSaver.saveAs(blob,"Leads_Template.xlsx")}catch(e){console.log(e,wbOut)}}}),app.service("GoogleApiService",function($http,$localStorage){this.autoComplete=function(input,resultCb,errorCb){$http({method:"GET",url:"/api/googleapis/autocomplete",headers:{"X-Auth-Token":$localStorage.accessToken},params:{input:input}}).then(function(response){resultCb(response.data)},function(error){console.log("Cannot get autocomplete results : "+error),errorCb()})},this.addressToLatlng=function(address,resultCb){$http({method:"GET",url:"/api/googleapis/geocode",headers:{"X-Auth-Token":$localStorage.accessToken},params:{address:address}}).then(function(response){resultCb(response.data.latitude,response.data.longitude)},function(error){console.log("Cannot convert from address to latlng : "+error)})},this.latlngToAddress=function(lat,lng,resultCb){$http({method:"GET",url:"/api/googleapis/geocode/reverse",headers:{"X-Auth-Token":$localStorage.accessToken},params:{latitude:lat,longitude:lng}}).then(function(response){resultCb(response.data.address)},function(error){console.log("Cannot convert from latlng to address : "+error)})}}),app.service("ToastService",function($mdToast){this.toast=function(message){$mdToast.show($mdToast.simple().textContent(message).position("bottom center").hideDelay(3e3))}});