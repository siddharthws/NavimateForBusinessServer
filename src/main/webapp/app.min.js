var app=angular.module("navimate",["ui.router","ngStorage","angular-js-xlsx","ngMaterial","ngMap","ngTable","angularjs-dropdown-multiselect","ngFileSaver","angular.filter"]);app.factory("httpResponseInterceptor",["$q","$injector",function($q,$injector){return{response:function(responseData){return responseData},responseError:function(response){switch(response.status){case 401:$injector.get("$state").go("login");break;default:console.log("Unknown error from server : "+response.status)}return $q.reject(response)}}}]),app.config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("")}]),app.config(function($stateProvider,$urlRouterProvider,$httpProvider){$httpProvider.interceptors.push("httpResponseInterceptor"),$urlRouterProvider.when("","/"),$urlRouterProvider.when("/help","/help/topics"),$urlRouterProvider.when("/dashboard","/dashboard/team/manage"),$urlRouterProvider.when("/dashboard/team","/dashboard/team/manage"),$urlRouterProvider.when("/dashboard/tasks","/dashboard/tasks/manage"),$urlRouterProvider.when("/dashboard/forms","/dashboard/forms/manage"),$stateProvider.state("home",{url:"/",templateUrl:"/static/views/home.html",controller:"HomeCtrl"}).state("login",{url:"/",templateUrl:"/static/views/home.html",controller:"HomeCtrl",params:{login:!0}}).state("legal",{url:"/legal",templateUrl:"/static/views/legal.html"}).state("help",{abstract:!0,url:"/help",templateUrl:"/static/views/help.html",controller:"HelpCtrl"}).state("help.topics",{url:"/topics",templateUrl:"/static/views/help/topics.html"}).state("help.app-about",{url:"/app-about",templateUrl:"/static/views/help/app/about.html"}).state("help.app-opt-route",{url:"/app-opt-route",templateUrl:"/static/views/help/app/opt-route.html"}).state("help.app-submitform",{url:"/app-submitform",templateUrl:"/static/views/help/app/submitform.html"}).state("help.app-viewtask",{url:"/app-viewtask",templateUrl:"/static/views/help/app/viewtask.html"}).state("help.form-about",{url:"/form-about",templateUrl:"/static/views/help/form/about.html"}).state("help.form-updatedef",{url:"/form-updatedef",templateUrl:"/static/views/help/form/updatedef.html"}).state("help.lead-about",{url:"/lead-about",templateUrl:"/static/views/help/lead/about.html"}).state("help.lead-manage",{url:"/lead-manage",templateUrl:"/static/views/help/lead/manage.html"}).state("help.register-fieldrep",{url:"/register-fieldrep",templateUrl:"/static/views/help/register/fieldrep.html"}).state("help.register-manage",{url:"/register-manage",templateUrl:"/static/views/help/register/manage.html"}).state("help.reports-about",{url:"/reports-about",templateUrl:"/static/views/help/reports/about.html"}).state("help.reports-export",{url:"/reports-export",templateUrl:"/static/views/help/reports/export.html"}).state("help.reports-filter",{url:"/reports-filter",templateUrl:"/static/views/help/reports/filter.html"}).state("help.reports-lead",{url:"/reports-lead",templateUrl:"/static/views/help/reports/lead.html"}).state("help.reports-team",{url:"/reports-team",templateUrl:"/static/views/help/reports/team.html"}).state("help.task-about",{url:"/task-about",templateUrl:"/static/views/help/task/about.html"}).state("help.task-manage",{url:"/task-manage",templateUrl:"/static/views/help/task/manage.html"}).state("help.team-about",{url:"/team-about",templateUrl:"/static/views/help/team/about.html"}).state("help.team-manage",{url:"/team-manage",templateUrl:"/static/views/help/team/manage.html"}).state("dashboard",{abstract:!0,url:"/dashboard",templateUrl:"/static/views/dashboard.html",controller:"DashboardCtrl"}).state("dashboard.team-manage",{url:"/team/manage",templateUrl:"/static/views/dashboard/team/manage.html",controller:"TeamManageCtrl"}).state("dashboard.team-report",{url:"/team/report",templateUrl:"/static/views/dashboard/team/report.html",controller:"TeamReportCtrl"}).state("dashboard.leads-manage",{url:"/leads/manage",templateUrl:"/static/views/dashboard/leads/manage.html",controller:"LeadManageCtrl"}).state("dashboard.leads-report",{url:"/leads/report",templateUrl:"/static/views/dashboard/leads/report.html",controller:"LeadReportCtrl"}).state("dashboard.tasks-manage",{url:"/tasks/manage",templateUrl:"/static/views/dashboard/tasks/manage.html",controller:"TaskManageCtrl"}).state("dashboard.forms-manage",{url:"/forms/manage",templateUrl:"/static/views/dashboard/forms/manage.html",controller:"FormManageCtrl"})}),app.controller("FormManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService){function getForms(){$rootScope.showWaitingDialog("Please wait while we are fetching forms..."),$http({method:"GET",url:"/api/users/form",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.forms=response.data},function(error){$rootScope.hideWaitingDialog(),console.log(error)})}$scope.selection.item=MENU_ITEMS[MENU_ITEM_FORMS],$scope.selection.option=ITEM_OPTIONS[ITEM_OPTION_MANAGE],getForms(),$scope.edit=function(form){DialogService.editForm(form,getForms)}}),app.controller("LeadManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,ExcelService,DialogService,ToastService){function init(){$scope.selection=[],$rootScope.showWaitingDialog("Please wait while we are fetching leads data..."),$http({method:"GET",url:"/api/users/lead",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.leads=response.data},function(error){$rootScope.hideWaitingDialog(),console.log(error)})}function removeSelected(){$rootScope.showWaitingDialog("Please wait while we are removing leads..."),$http({method:"POST",url:"/api/users/lead/remove",headers:{"X-Auth-Token":$localStorage.accessToken},data:{leads:$scope.selection}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("leads removed..."),init()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to remove leads!!!"),init()})}$scope.selection.item=MENU_ITEMS[MENU_ITEM_LEADS],$scope.selection.option=ITEM_OPTIONS[ITEM_OPTION_MANAGE],$scope.leads=[],init(),$scope.add=function(){DialogService.leadEditor(null,init)},$scope.toggleSelection=function(lead){var idx=$scope.selection.indexOf(lead);-1!=idx?$scope.selection.splice(idx,1):$scope.selection.push(lead)},$scope.toggleAll=function(){$scope.selection.length==$scope.leads.length?$scope.selection.splice(0,$scope.selection.length):$scope.leads.forEach(function(lead){-1==$scope.selection.indexOf(lead)&&$scope.selection.push(lead)})},$scope.remove=function(){DialogService.confirm("Are you sure you want to remove these "+$scope.selection.length+" leads ?",removeSelected)},$scope.edit=function(){DialogService.leadEditor($scope.selection)},$scope.createtasks=function(){var task=[];$scope.selection.forEach(function(lead){task.push({lead:lead})}),DialogService.taskCreator(task)}}),app.controller("LeadReportCtrl",function($scope,$rootScope,$http,$localStorage,$state,$filter,ExcelService,ToastService){function initFilterData(){for(var i=0;i<$scope.columns.length;i++){var column=$scope.columns[i];if("selection"==column.type||"radioList"==column.type){var selectFilter={};selectFilter.options=[],selectFilter.unselected=[];for(var j=0;j<$scope.values.length;j++){var value=$scope.values[j][column.title];-1==selectFilter.options.indexOf(value)&&selectFilter.options.push(value)}$scope.filter.selection[column.title]=selectFilter}else"number"==column.type?$scope.filter.number[column.title]={}:"text"==column.type?$scope.filter.text[column.title]={}:"date"==column.type&&($scope.filter.date[column.title]={})}}$scope.export=function(){if($scope.filteredReport.length){var table=$(".lead-report-table").get(0);ExcelService.export(table,"Lead-Report")}else ToastService.toast("Nothing to export !!!")},$scope.resetFilters=function(){$scope.filter={selection:{},text:{},number:{},date:{},sort:[]},initFilterData()},$scope.filterSort=function(property,bReverse){bReverse?(-1!=$scope.filter.sort.indexOf(property)&&$scope.filter.sort.splice($scope.filter.sort.indexOf(property),1),property="-"+property):-1!=$scope.filter.sort.indexOf("-"+property)&&$scope.filter.sort.splice($scope.filter.sort.indexOf("-"+property),1),-1!=$scope.filter.sort.indexOf(property)?$scope.filter.sort.splice($scope.filter.sort.indexOf(property),1):$scope.filter.sort.push(property),$scope.applyFilters()},$scope.filterSelect=function(column,value){var idx=$scope.filter.selection[column].unselected.indexOf(value);-1==idx?$scope.filter.selection[column].unselected.push(value):$scope.filter.selection[column].unselected.splice(idx,1),$scope.applyFilters()},$scope.fromDateUpdate=function(fromDate,column){$scope.filter.date[column].from=$filter("date")(fromDate,"yyyy-MM-dd"),$scope.applyFilters()},$scope.toDateUpdate=function(toDate,column){$scope.filter.date[column].to=$filter("date")(toDate,"yyyy-MM-dd"),$scope.applyFilters()},$scope.applyFilters=function(){$scope.filteredValues=[];for(var i=0;i<$scope.values.length;i++){for(var bAdd=!0,j=0;j<$scope.columns.length;j++){var column=$scope.columns[j],value=$scope.values[i][column.title];if("selection"==column.type||"radioList"==column.type)-1!=$scope.filter.selection[column.title].unselected.indexOf(value)&&(bAdd=!1);else if("number"==column.type){var lessThan=$scope.filter.number[column.title].lesserThan,greaterThan=$scope.filter.number[column.title].greaterThan;"-"==value&&(lessThan||greaterThan)?bAdd=!1:(lessThan&&value>lessThan||greaterThan&&value<greaterThan)&&(bAdd=!1)}else if("text"==column.type){var searchText=$scope.filter.text[column.title].search;searchText&&-1==value.toLowerCase().search(searchText.toLowerCase())&&(bAdd=!1)}else if("date"==column.type){var from=$scope.filter.date[column.title].from,to=$scope.filter.date[column.title].to;(from&&value<from||to&&value>to)&&(bAdd=!1)}}bAdd&&$scope.filteredValues.push($scope.values[i])}$scope.filteredValues=$filter("orderBy")($scope.filteredValues,$scope.filter.sort)},$scope.selection.item=MENU_ITEMS[MENU_ITEM_LEADS],$scope.selection.option=ITEM_OPTIONS[ITEM_OPTION_REPORT],$scope.values=[],$scope.columns=[],$scope.filteredValues=[],$scope.resetFilters(),$scope.init=function(){$rootScope.showWaitingDialog("Please wait while we are fetching lead report..."),$http({method:"GET",url:"/api/reports/lead",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.columns=response.data.columns,$scope.values=[];for(var values=response.data.values,i=0;i<values.length;i++){for(var row={},j=0;j<$scope.columns.length;j++)row[$scope.columns[j].title]=values[i][j];$scope.values.push(row)}$scope.filteredValues=$scope.values,$scope.resetFilters()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load report !!!")})},$scope.init(),$("body").on("click",function(e){$(".dropdown.dropdown-multiselect").is(e.target)||0!==$(".dropdown.dropdown-multiselect").has(e.target).length||0!==$(".show").has(e.target).length||$(".dropdown.dropdown-multiselect .dropdown-menu").removeClass("show")}),$(".dropdown.dropdown-multiselect > button").on("click",function(e){$($(this).parent()).find(".dropdown-menu").toggleClass("show")})}),app.controller("TaskManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService){function initTasks(){$scope.selection=[],$rootScope.showWaitingDialog("Please wait while we are fetching tasks..."),$http({method:"GET",url:"/api/users/task",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.tasks=response.data},function(error){$rootScope.hideWaitingDialog(),console.log(error)})}function closeSelected(){$rootScope.showWaitingDialog("Closing Tasks..."),$http({method:"POST",url:"/api/users/task/close",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:$scope.selection}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("tasks closed..."),initTasks()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to close tasks!!!"),initTasks()})}function stopRenewalCb(){$rootScope.showWaitingDialog("Stopping renewal period..."),$http({method:"POST",url:"/api/users/task/stoprenew",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:$scope.selection}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("renewal period stopped..."),initTasks()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to stop renewal!!!"),initTasks()})}$scope.selection.item=MENU_ITEMS[MENU_ITEM_TASKS],$scope.selection.option=ITEM_OPTIONS[ITEM_OPTION_MANAGE],initTasks(),$scope.add=function(){DialogService.taskCreator([{}],initTasks)},$scope.toggleSelection=function(task){var idx=$scope.selection.indexOf(task);-1!=idx?$scope.selection.splice(idx,1):$scope.selection.push(task)},$scope.toggleAll=function(){$scope.selection.length==$scope.tasks.length?$scope.selection.splice(0,$scope.selection.length):$scope.tasks.forEach(function(task){-1==$scope.selection.indexOf(task)&&$scope.selection.push(task)})},$scope.close=function(){DialogService.confirm("Are you sure you want to close these "+$scope.selection.length+" tasks ?",closeSelected)},$scope.stopRenewal=function(){DialogService.confirm("Are you sure you want to stop renewal for "+$scope.selection.length+" tasks ?",stopRenewalCb)}}),app.controller("TeamManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService){function removeSelected(){$rootScope.showWaitingDialog("Please wait while we are removing members..."),$http({method:"POST",url:"/api/users/team/remove",headers:{"X-Auth-Token":$localStorage.accessToken},data:{reps:JSON.stringify($scope.selection)}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Reps removed..."),$scope.init()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to remove reps!!!"),$scope.init()})}$scope.selection.item=MENU_ITEMS[MENU_ITEM_TEAM],$scope.selection.option=ITEM_OPTIONS[ITEM_OPTION_MANAGE],$scope.team=[],$scope.init=function(){$scope.selection=[],$rootScope.showWaitingDialog("Please wait while we are fetching team details..."),$http({method:"GET",url:"/api/users/team",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.team=response.data},function(error){$rootScope.hideWaitingDialog(),console.log(error)})},$scope.init(),$scope.add=function(){DialogService.addRep($scope.init)},$scope.track=function(){DialogService.liveTracking($scope.team,$scope.init)},$scope.toggleSelection=function(rep){var idx=$scope.selection.indexOf(rep);-1!=idx?$scope.selection.splice(idx,1):$scope.selection.push(rep)},$scope.toggleAll=function(){$scope.selection.length==$scope.team.length?$scope.selection.splice(0,$scope.selection.length):$scope.team.forEach(function(rep){-1==$scope.selection.indexOf(rep)&&$scope.selection.push(rep)})},$scope.remove=function(){DialogService.confirm("Are you sure you want to remove these "+$scope.selection.length+" members from your team ?",removeSelected)},$scope.createtasks=function(){var task=[];$scope.selection.forEach(function(rep){task.push({rep:rep})}),DialogService.taskCreator(task)}}),app.controller("TeamReportCtrl",function($scope,$rootScope,$http,$localStorage,$state,$filter,ExcelService){function initFilterData(){for(var i=0;i<$scope.columns.length;i++){var column=$scope.columns[i];if("selection"==column.type||"radioList"==column.type){var selectFilter={};selectFilter.options=[],selectFilter.unselected=[];for(var j=0;j<$scope.values.length;j++){var value=$scope.values[j][column.title];-1==selectFilter.options.indexOf(value)&&selectFilter.options.push(value)}$scope.filter.selection[column.title]=selectFilter}else"number"==column.type?$scope.filter.number[column.title]={}:"text"==column.type?$scope.filter.text[column.title]={}:"date"==column.type&&($scope.filter.date[column.title]={})}}$scope.export=function(){if($scope.filteredReport.length){var table=$(".team-report-table").get(0);ExcelService.export(table,"Team-Report")}else ToastService.toast("Nothing to export !!!")},$scope.resetFilters=function(){$scope.filter={selection:{},text:{},number:{},date:{},sort:[]},initFilterData()},$scope.filterSort=function(property,bReverse){bReverse?(-1!=$scope.filter.sort.indexOf(property)&&$scope.filter.sort.splice($scope.filter.sort.indexOf(property),1),property="-"+property):-1!=$scope.filter.sort.indexOf("-"+property)&&$scope.filter.sort.splice($scope.filter.sort.indexOf("-"+property),1),-1!=$scope.filter.sort.indexOf(property)?$scope.filter.sort.splice($scope.filter.sort.indexOf(property),1):$scope.filter.sort.push(property),$scope.applyFilters()},$scope.filterSelect=function(column,value){var idx=$scope.filter.selection[column].unselected.indexOf(value);-1==idx?$scope.filter.selection[column].unselected.push(value):$scope.filter.selection[column].unselected.splice(idx,1),$scope.applyFilters()},$scope.fromDateUpdate=function(fromDate,column){$scope.filter.date[column].from=$filter("date")(fromDate,"yyyy-MM-dd"),$scope.applyFilters()},$scope.toDateUpdate=function(toDate,column){$scope.filter.date[column].to=$filter("date")(toDate,"yyyy-MM-dd"),$scope.applyFilters()},$scope.applyFilters=function(){$scope.filteredValues=[];for(var i=0;i<$scope.values.length;i++){for(var row=$scope.values[i],bAdd=!0,j=0;j<$scope.columns.length;j++){var column=$scope.columns[j],value=row[column.title];if("selection"==column.type||"radioList"==column.type)-1!=$scope.filter.selection[column.title].unselected.indexOf(value)&&(bAdd=!1);else if("number"==column.type){var lessThan=$scope.filter.number[column.title].lesserThan,greaterThan=$scope.filter.number[column.title].greaterThan;"-"==value&&(lessThan||greaterThan)?bAdd=!1:(lessThan&&value>lessThan||greaterThan&&value<greaterThan)&&(bAdd=!1)}else if("text"==column.type){var searchText=$scope.filter.text[column.title].search;searchText&&-1==value.toLowerCase().search(searchText.toLowerCase())&&(bAdd=!1)}else if("date"==column.type){var from=$scope.filter.date[column.title].from,to=$scope.filter.date[column.title].to;(from&&value<from||to&&value>to)&&(bAdd=!1)}}bAdd&&$scope.filteredValues.push(row),$scope.filteredValues=$filter("orderBy")($scope.filteredValues,$scope.filter.sort)}},$scope.selection.item=MENU_ITEMS[MENU_ITEM_TEAM],$scope.selection.option=ITEM_OPTIONS[ITEM_OPTION_REPORT],$scope.values=[],$scope.columns=[],$scope.filteredValues=[],$scope.resetFilters(),$scope.init=function(){$rootScope.showWaitingDialog("Please wait while we are fetching team report..."),$http({method:"GET",url:"/api/reports/team",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.columns=response.data.columns,$scope.values=[];for(var values=response.data.values,i=0;i<values.length;i++){for(var row={},j=0;j<$scope.columns.length;j++)row[$scope.columns[j].title]=values[i][j];$scope.values.push(row)}$scope.filteredValues=$scope.values,$scope.resetFilters()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load report !!!")})},$scope.init(),$("body").on("click",function(e){$(".dropdown.dropdown-multiselect").is(e.target)||0!==$(".dropdown.dropdown-multiselect").has(e.target).length||0!==$(".show").has(e.target).length||$(".dropdown.dropdown-multiselect .dropdown-menu").removeClass("show")}),$(".dropdown.dropdown-multiselect > button").on("click",function(e){$($(this).parent()).find(".dropdown-menu").toggleClass("show")})}),app.controller("DashboardCtrl",function($scope,$rootScope,$state,$localStorage,AuthService){$scope.selection={},$scope.name=$localStorage.name,$scope.logout=function(){$rootScope.showWaitingDialog("Please wait while you are being logged out..."),AuthService.logout().then(function(response){$rootScope.hideWaitingDialog(),$localStorage.accessToken="",$state.go("home")},function(error){$rootScope.hideWaitingDialog(),console.log(error)})},$scope.onOptionClick=function(option){var state="dashboard."+$scope.selection.item.name+"-"+option.name;$state.go(state)}}),app.controller("AddRepCtrl",function($scope,$rootScope,$http,$localStorage,$mdDialog,ToastService,teamUpdateCb){function validate(){var bValid=!0;return $scope.bNameError=!1,$scope.bPhoneError=!1,$scope.name||(bValid=!1,$scope.bNameError=!0),$scope.phoneNumber||(bValid=!1,$scope.bPhoneError=!0),bValid||ToastService.toast("Please fill all fields."),bValid}$scope.add=function(){if(validate()){var phone;phone=$scope.countryCode?"+"+$scope.countryCode+$scope.phoneNumber:"+91"+$scope.phoneNumber;var email=$scope.email?$scope.email:"";$rootScope.showWaitingDialog("Please wait while we are adding rep..."),$http({method:"POST",url:"/api/users/team",headers:{"X-Auth-Token":$localStorage.accessToken},data:{name:$scope.name,phoneNumber:phone,email:email}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Rep Added"),teamUpdateCb()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to add rep"),console.log(error)})}},$scope.cancel=function(){$mdDialog.hide()}}),app.controller("AlertCtrl",function($scope,$mdDialog,message){$scope.message=message,$scope.ok=function(){$mdDialog.hide()}}),app.controller("ConfirmCtrl",function($scope,$mdDialog,message,yesCb){$scope.message=message,$scope.yes=function(){$mdDialog.hide(),yesCb()},$scope.no=function(){$mdDialog.hide()}}),app.controller("EditFormCtrl",function($scope,$rootScope,$http,$localStorage,$mdDialog,ToastService,form,updateCb){$scope.form=form,$scope.save=function(){$rootScope.showWaitingDialog("Please wait while form is being updated..."),$http({method:"POST",url:"/api/users/form",headers:{"X-Auth-Token":$localStorage.accessToken},data:{form:$scope.form}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Form updated successfully..."),updateCb()},function(error){$rootScope.hideWaitingDialog(),console.log(error),ToastService.toast("Could not update form...")})},$scope.cancel=function(){$mdDialog.hide()}}),app.controller("EmailVerifyCtrl",function($scope,$rootScope,$mdDialog,AuthService,DialogService,ToastService,name,email,password){function validateOtp(){return $scope.otp?$scope.otp==otp_gen||($scope.bShowError=!0,ToastService.toast("Invalid OTP Entered"),!1):($scope.bShowError=!0,ToastService.toast("Please enter the OTP sent to Email ID provided"),!1)}$scope.emailVerify=function(){validateOtp()&&($rootScope.showWaitingDialog("Please wait while you are being registered..."),AuthService.register(name,email,password).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Registered successfully..."),DialogService.login()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to register..."),DialogService.register(name,email,password)}))},$scope.cancel=function(){$mdDialog.hide()},$scope.bShowError=!1;var otp_gen;otp_gen=Math.floor(1e5+9e5*Math.random()),$rootScope.showWaitingDialog("Please wait while OTP is sent to mail ID"),AuthService.emailOtp(otp_gen,email).then(function(response){ToastService.toast("Email Sent Successfully."),$rootScope.hideWaitingDialog()},function(error){ToastService.toast("Error While Sending OTP to Email."),$rootScope.hideWaitingDialog(),DialogService.register(name,email,password)})}),app.controller("LeadEditorCtrl",function($scope,$rootScope,$mdDialog,$http,$localStorage,ToastService,GoogleApiService,ExcelService,leads,leadUpdateCb){function validate(){$scope.bShowError=!1;for(var i=0;i<$scope.leads.length;i++){var lead=$scope.leads[i];if(!$scope.isLeadValid(lead))return $scope.bShowError=!0,scrollList(i),ToastService.toast("Please fill all fields in leads..."),!1}return!0}function scrollList(index){var list=$(".dialog-container .list-group")[0],items=$(list).find(".list-group-item"),scrollingOffset=0;index>=items.length?scrollingOffset=$(document).height():index>0&&(scrollingOffset=$(items[index]).offset().top-$(items[0]).offset().top),$(list).animate({scrollTop:scrollingOffset})}$scope.add=function(){var lead={latitude:googleMap.getCenter().lat(),longitude:googleMap.getCenter().lng()};$scope.leads.push(lead),$scope.listItemClick(lead),scrollList($scope.leads.length)},$scope.listItemClick=function(lead){$scope.selectedLead=lead,$scope.searchResults=[],googleMap&&googleMap.panTo(new google.maps.LatLng(lead.latitude,lead.longitude))},$scope.remove=function(lead){var idx=$scope.leads.indexOf(lead);idx>=0&&$scope.leads.splice(idx,1)},$scope.searchAddress=function(){$scope.selectedLead.address&&($scope.bSearchWaiting=!0,$scope.searchResults=[],GoogleApiService.autoComplete($scope.selectedLead.address,function(results){$scope.searchResults=results,$scope.bSearchWaiting=!1}))},$scope.searchResultClick=function(searchResult){$scope.selectedLead.address=searchResult.address,$scope.selectedLead.latitude=0,$scope.selectedLead.longitude=0,GoogleApiService.addressToLatlng(searchResult.address,function(lat,lng){$scope.selectedLead.latitude=lat,$scope.selectedLead.longitude=lng,googleMap.panTo(new google.maps.LatLng(lat,lng))})},$scope.save=function(){validate()&&($rootScope.showWaitingDialog("Please wait while leads are added..."),$http({method:"POST",url:"/api/users/lead",headers:{"X-Auth-Token":$localStorage.accessToken},data:{leads:JSON.stringify($scope.leads)}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Leads added succesfully..."),leadUpdateCb()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to update leads !!!"),console.log(error)}))},$scope.isLeadValid=function(lead){return lead.title&&lead.phoneNumber&&lead.latitude&&lead.longitude&&lead.address},$scope.mapInitialized=function(map){if(googleMap=map,$scope.leads.length){var bounds=new google.maps.LatLngBounds;$scope.leads.forEach(function(lead){bounds.extend(new google.maps.LatLng(lead.latitude,lead.longitude))}),googleMap.fitBounds(bounds)}else $scope.add();google.maps.event.trigger(googleMap,"resize"),$scope.$apply()},$scope.getMarkerIcon=function(lead){return $scope.selectedLead==lead?{url:"/static/images/marker_selected.png",scaledSize:[40,40]}:!$scope.isLeadValid(lead)&&$scope.bShowError?{url:"/static/images/marker_error.png",scaledSize:[40,40]}:{url:"/static/images/marker_default.png",scaledSize:[40,40]}},$scope.markerClicked=function(e,lead){$scope.listItemClick(lead),scrollList($scope.leads.indexOf(lead))},$scope.markerDragged=function(e,lead){lead.latitude=e.latLng.lat(),lead.longitude=e.latLng.lng(),GoogleApiService.latlngToAddress(lead.latitude,lead.longitude,function(address){lead.address=address})},$scope.excelRead=function(workbook){$rootScope.showWaitingDialog("Please wait while we are reading from excel file..."),ExcelService.excelRead(workbook).then(function(response){$rootScope.hideWaitingDialog(),response.data.forEach(function(lead){$scope.leads.push(lead)})},function(error){$rootScope.hideWaitingDialog(),console.log(error)})},$scope.excelError=function(e){console.log("Excel Read Error = "+e)},$scope.uploadTemplate=function(){ExcelService.leadUploadTemplate()},$scope.cancel=function(){$mdDialog.hide()},$scope.leads=[],$scope.selectedLead={},$scope.bShowError=!1,$scope.searchResults=[],$scope.bSearchWaiting=!1,$scope.mapCenter=[21,79],$scope.mapZoom=4;var googleMap=null;leads&&($scope.leads=leads,$scope.selectedLead=$scope.leads[0])}),app.controller("LiveTrackingCtrl",function($scope,$mdDialog,$interval,team){function initTrackData(){for(var i=0;i<$scope.team.length;i++){var trackData={status:!1,location:{lat:20,lng:75},speed:0,lastUpdated:0};$scope.team[i].trackData=trackData}}$scope.cancel=function(){$mdDialog.hide(),$interval.cancel(liveTrack)},$scope.temp=function(){initTrackData(),fakeData=function(){$scope.team[0].trackData.location.lat+=.002,$scope.team[0].trackData.location.lng+=.002,$scope.team[1].trackData.location.lat+=.002,$scope.team[1].trackData.location.lng+=.002,console.log($scope.team)},liveTrack=$interval(fakeData,1e3),fakeData()},$scope.mapInitialized=function(map){googleMap=map;var bounds=new google.maps.LatLngBounds;$scope.team.forEach(function(rep){bounds.extend(new google.maps.LatLng(rep.trackData.location.lat,rep.trackData.location.lng))}),googleMap.fitBounds(bounds),google.maps.event.trigger(googleMap,"resize"),$scope.$apply()},$scope.getMarkerIcon=function(rep){return{url:"/static/images/marker_selected.png",scaledSize:[40,40]}},$scope.listItemClick=function(rep){$scope.selectedRep=rep,googleMap&&googleMap.panTo(new google.maps.LatLng(rep.trackData.location.lat,rep.trackData.location.lng))};var liveTrack;$scope.selectedRep={},$scope.team=team,$scope.mapCenter=[21,75],$scope.mapZoom=4;var googleMap=null;$scope.temp()}),app.controller("LoginCtrl",function($scope,$rootScope,$mdDialog,$state,$localStorage,AuthService,DialogService,ToastService){function validate(){return!(!$scope.email||!$scope.password)||($scope.bShowError=!0,ToastService.toast("Please fill all fields !!!"),!1)}$scope.login=function(){validate()&&($rootScope.showWaitingDialog("Please wait while we log you in..."),AuthService.login($scope.email,$scope.password).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),$localStorage.accessToken=response.data.accessToken,$localStorage.name=response.data.name,$state.go("dashboard.team-manage")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Invalid Credentials...")}))},$scope.register=function(){DialogService.register("","","")},$scope.cancel=function(){$mdDialog.hide()},$scope.bShowError=!1}),app.controller("RegisterCtrl",function($scope,$rootScope,$mdDialog,AuthService,DialogService,ToastService,name,email,password){function validate(){return $scope.email&&$scope.password&&$scope.name?-1!=$scope.email.indexOf("@")&&-1!=$scope.email.indexOf(".")||(ToastService.toast("Invalid Email"),!1):($scope.bShowError=!0,ToastService.toast("Please fill all fields !!!"),!1)}$scope.register=function(){validate()&&DialogService.emailVerify($scope.name,$scope.email,$scope.password)},$scope.cancel=function(){$mdDialog.hide()},$scope.bShowError=!1,$scope.name=name,$scope.email=email,$scope.password=password}),app.controller("TaskCreatorCtrl",function($scope,$rootScope,$http,$localStorage,$state,$mdDialog,ToastService,taskAddedCb,tasks){function validate(){var bValid=!0;return $scope.bShowError=!1,0==$scope.tasks.length?(ToastService.toast("Add some tasks to create..."),bValid=!1):($scope.tasks.forEach(function(task){task.lead&&task.rep&&task.template||(bValid=!1,$scope.bShowError=!0)}),bValid||ToastService.toast("Please fill all fields")),bValid}$scope.tasks=tasks,$scope.leads=[],$scope.team=[],$scope.formTemplates=[],$rootScope.showWaitingDialog("Please wait while we are fetching information.."),$http({method:"GET",url:"/api/users/lead",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.leads=response.data},function(error){$rootScope.hideWaitingDialog(),console.log(error)}),$http({method:"GET",url:"/api/users/team",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$scope.team=response.data},function(error){console.log(error)}),$http({method:"GET",url:"/api/users/form",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$scope.formTemplates=response.data},function(error){console.log(error)}),$scope.add=function(){$scope.tasks.push({})},$scope.create=function(){validate()&&($rootScope.showWaitingDialog("Please wait while task is created..."),$http({method:"POST",url:"/api/users/task",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:JSON.stringify($scope.tasks)}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Tasks Created successfully..."),taskAddedCb()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to create tasks...")}))},$scope.remove=function(task){var idx=$scope.tasks.indexOf(task);idx>=0&&$scope.tasks.splice(idx,1)},$scope.cancel=function(){$mdDialog.hide()}}),app.controller("HelpCtrl",function($scope){}),app.controller("HomeCtrl",function($scope,$window,$state,DialogService){$scope.login=function(){DialogService.login()},$scope.register=function(){DialogService.register("","","")},$scope.explore=function(){$("#div_feature").is(":hidden")?($("#div_feature").show(2e3),$("#btn_explore").text("Hide Features")):($("#div_feature").slideUp(3e3),$("#btn_explore").text("Explore Features"))},$scope.downloadApp=function(){$window.location.href="https://play.google.com/store/apps/details?id=com.biz.navimate"},$scope.facebook=function(){$window.location.href="https://www.facebook.com/navimateapp/"},$state.params.login&&DialogService.login()}),app.controller("IndexCtrl",function($scope,$rootScope){$scope.waiting={bShow:!1,message:""},$rootScope.showWaitingDialog=function(message){$scope.waiting.message=message,$scope.waiting.bShow=!0},$rootScope.hideWaitingDialog=function(){$scope.waiting.bShow=!1}});var MENU_ITEM_TEAM=0,MENU_ITEM_LEADS=1,MENU_ITEM_TASKS=2,MENU_ITEM_FORMS=3,ITEM_OPTION_MANAGE=0,ITEM_OPTION_REPORT=1,ITEM_OPTIONS=[{id:ITEM_OPTION_MANAGE,name:"manage",title:"Manage"},{id:ITEM_OPTION_REPORT,name:"report",title:"Reports"}],MENU_ITEMS=[{id:MENU_ITEM_TEAM,name:"team",options:[ITEM_OPTIONS[ITEM_OPTION_MANAGE],ITEM_OPTIONS[ITEM_OPTION_REPORT]]},{id:MENU_ITEM_LEADS,name:"leads",options:[ITEM_OPTIONS[ITEM_OPTION_MANAGE],ITEM_OPTIONS[ITEM_OPTION_REPORT]]},{id:MENU_ITEM_TASKS,name:"tasks",options:[ITEM_OPTIONS[ITEM_OPTION_MANAGE]]},{id:MENU_ITEM_FORMS,name:"forms",options:[ITEM_OPTIONS[ITEM_OPTION_MANAGE]]}];app.service("AuthService",function($http,$localStorage){this.register=function(name,email,password){return $http({method:"POST",url:"/api/auth/register",data:{name:name,email:email,password:password}})},this.login=function(email,password){return $http({method:"POST",url:"/api/auth/login",data:{email:email,password:password}})},this.logout=function(){return $http({method:"GET",url:"/api/auth/logout",headers:{"X-Auth-Token":$localStorage.accessToken}})},this.emailOtp=function(otp,email){return $http({method:"POST",url:"/api/auth/email",headers:{"X-Auth-Token":$localStorage.accessToken},data:{otp:otp,email:email}})}}),app.service("DialogService",function($mdDialog){this.alert=function(message){$mdDialog.show({templateUrl:"/static/views/dialogs/Alert.html",controller:"AlertCtrl",clickOutsideToClose:!0,locals:{message:message}})},this.confirm=function(message,yesCb){$mdDialog.show({templateUrl:"/static/views/dialogs/Confirm.html",controller:"ConfirmCtrl",clickOutsideToClose:!0,locals:{message:message,yesCb:yesCb}})},this.login=function(){$mdDialog.show({templateUrl:"/static/views/dialogs/Login.html",controller:"LoginCtrl",clickOutsideToClose:!0})},this.register=function(name,email,password){$mdDialog.show({templateUrl:"/static/views/dialogs/Register.html",controller:"RegisterCtrl",clickOutsideToClose:!0,locals:{name:name,email:email,password:password}})},this.addRep=function(teamUpdateCb){$mdDialog.show({templateUrl:"/static/views/dialogs/AddRep.html",controller:"AddRepCtrl",clickOutsideToClose:!0,locals:{teamUpdateCb:teamUpdateCb}})},this.taskCreator=function(tasks,taskAddedCb){$mdDialog.show({templateUrl:"/static/views/dialogs/TaskCreator.html",controller:"TaskCreatorCtrl",clickOutsideToClose:!0,locals:{tasks:tasks,taskAddedCb:taskAddedCb}})},this.leadEditor=function(leads,leadUpdateCb){$mdDialog.show({templateUrl:"/static/views/dialogs/LeadEditor.html",controller:"LeadEditorCtrl",clickOutsideToClose:!0,locals:{leads:leads,leadUpdateCb:leadUpdateCb}})},this.editForm=function(form,updateCb){$mdDialog.show({templateUrl:"/static/views/dialogs/EditForm.html",controller:"EditFormCtrl",clickOutsideToClose:!0,locals:{form:form,updateCb:updateCb}})},this.liveTracking=function(team){$mdDialog.show({templateUrl:"/static/views/dialogs/LiveTracking.html",controller:"LiveTrackingCtrl",clickOutsideToClose:!1,locals:{team:team}})},this.emailVerify=function(name,email,passowrd){$mdDialog.show({templateUrl:"/static/views/dialogs/EmailVerify.html",controller:"EmailVerifyCtrl",clickOutsideToClose:!1,locals:{name:name,email:email,password:passowrd}})}}),app.service("ExcelService",function($http,$localStorage,$filter,FileSaver,Blob){function getFileSuffix(){var timestamp=new Date;return timestamp=$filter("date")(timestamp,"-dd-MM-yy-HHmm")}function s2ab(s){if("undefined"!=typeof ArrayBuffer){for(var buf=new ArrayBuffer(s.length),view=new Uint8Array(buf),i=0;i!=s.length;++i)view[i]=255&s.charCodeAt(i);return buf}for(var buf=new Array(s.length),i=0;i!=s.length;++i)buf[i]=255&s.charCodeAt(i);return buf}this.excelRead=function(workbook){var worksheet=workbook.Sheets[workbook.SheetNames[0]],range=XLSX.utils.decode_range(worksheet["!ref"]),rows=[];for(row=range.s.r;row<=range.e.r;row++){var cols=[];for(col=range.s.c;col<=range.e.c;col++){var cell=worksheet[XLSX.utils.encode_cell({r:row,c:col})];cell?cols.push(cell.v):cols.push("")}rows.push(cols)}return $http({method:"POST",url:"/api/leads/upload",headers:{"X-Auth-Token":$localStorage.accessToken},data:{excelData:JSON.stringify(rows)}})},this.export=function(table,fileNamePrefix){var wb=XLSX.utils.table_to_book(table,{sheet:"Sheet 1"}),wbOut=XLSX.write(wb,{bookType:"xlsx",bookSST:!0,type:"binary"}),blob=new Blob([s2ab(wbOut)],{type:"application/octet-stream"}),fileName=fileNamePrefix+getFileSuffix()+".xlsx";try{FileSaver.saveAs(blob,fileName)}catch(e){console.log(e,wbOut)}},this.leadUploadTemplate=function(){var json=[{Title:"",Description:"",Phone:"",Address:"",Email:"",Latitude:0,Longitude:0}],ws=XLSX.utils.json_to_sheet(json),wb={SheetNames:[],Sheets:{}};XLSX.utils.book_append_sheet(wb,ws,"Sheet 1");var wbOut=XLSX.write(wb,{bookType:"xlsx",bookSST:!0,type:"binary"}),blob=new Blob([s2ab(wbOut)],{type:"application/octet-stream"});try{FileSaver.saveAs(blob,"Leads_Template.xlsx")}catch(e){console.log(e,wbOut)}}}),app.service("GoogleApiService",function($http,$localStorage){this.autoComplete=function(input,resultCb){$http({method:"GET",url:"/api/googleapis/autocomplete",headers:{"X-Auth-Token":$localStorage.accessToken},params:{input:input}}).then(function(response){resultCb(response.data)},function(error){console.log("Cannot get autocomplete results : "+error),resultCb()})},this.addressToLatlng=function(address,resultCb){$http({method:"GET",url:"/api/googleapis/geocode",headers:{"X-Auth-Token":$localStorage.accessToken},params:{address:address}}).then(function(response){resultCb(response.data.latitude,response.data.longitude)},function(error){console.log("Cannot convert from address to latlng : "+error),resultCb()})},this.latlngToAddress=function(lat,lng,resultCb){$http({method:"GET",url:"/api/googleapis/geocode/reverse",headers:{"X-Auth-Token":$localStorage.accessToken},params:{latitude:lat,longitude:lng}}).then(function(response){resultCb(response.data.address)},function(error){console.log("Cannot convert from latlng to address : "+error),resultCb()})}}),app.service("ToastService",function($mdToast){this.toast=function(message){$mdToast.show($mdToast.simple().textContent(message).position("bottom center").hideDelay(3e3))}});