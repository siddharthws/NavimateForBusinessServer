var app=angular.module("navimate",["ui.router","ngStorage","angular-js-xlsx","ngMaterial","ngMap","ngTable","ngCookies","angularjs-dropdown-multiselect","ngFileSaver","angular.filter"]);app.factory("httpResponseInterceptor",["$q","$injector",function($q,$injector){return{response:function(responseData){return responseData},responseError:function(response){switch(response.status){case 401:$injector.get("$state").go("login");break;default:console.log("Unknown error from server : "+response.status)}return $q.reject(response)}}}]),app.filter("bytetobase",function(){return function(buffer){for(var binary="",bytes=new Uint8Array(buffer),len=bytes.byteLength,i=0;i<len;i++)binary+=String.fromCharCode(bytes[i]);return window.btoa(binary)}}),app.config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("")}]),app.config(function($stateProvider,$urlRouterProvider,$httpProvider,$compileProvider){$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|file|ftp|blob):|data:image\//),$httpProvider.interceptors.push("httpResponseInterceptor"),$urlRouterProvider.when("","/"),$urlRouterProvider.when("/dashboard","/dashboard/team/manage"),$urlRouterProvider.when("/dashboard/team","/dashboard/team/manage"),$urlRouterProvider.when("/dashboard/tasks","/dashboard/tasks/manage"),$urlRouterProvider.when("/dashboard/forms","/dashboard/forms/manage"),$stateProvider.state("home",{url:"/",templateUrl:"/static/views/home.html",controller:"HomeCtrl"}).state("login",{url:"/",templateUrl:"/static/views/home.html",controller:"HomeCtrl",params:{login:!0}}).state("legal",{url:"/legal",templateUrl:"/static/views/legal.html"}).state("help",{url:"/help",templateUrl:"/static/views/help.html",controller:"HelpCtrl"}).state("dashboard",{abstract:!0,url:"/dashboard",templateUrl:"/static/views/dashboard.html",controller:"DashboardCtrl"}).state("dashboard.team-manage",{url:"/team/manage",templateUrl:"/static/views/dashboard/team/manage.html",controller:"TeamManageCtrl as $ctrl"}).state("dashboard.leads-manage",{url:"/leads/manage",templateUrl:"/static/views/dashboard/leads/manage.html",controller:"LeadManageCtrl as $ctrl"}).state("dashboard.tasks-open",{url:"/tasks/open",templateUrl:"/static/views/dashboard/tasks/open.html",controller:"TaskOpenCtrl as $ctrl"}).state("dashboard.tasks-close",{url:"/tasks/close",templateUrl:"/static/views/dashboard/tasks/close.html",controller:"TaskCloseCtrl as $ctrl"}).state("dashboard.reports-report",{url:"/report",templateUrl:"/static/views/dashboard/reports/report.html",controller:"ReportCtrl as $ctrl"}).state("dashboard.templates-form",{url:"/templates/form",templateUrl:"/static/views/dashboard/templates/form.html",controller:"FormTemplatesCtrl as $ctrl"}).state("dashboard.templates-lead",{url:"/templates/lead",templateUrl:"/static/views/dashboard/templates/lead.html",controller:"LeadTemplatesCtrl as $ctrl"}).state("dashboard.templates-task",{url:"/templates/task",templateUrl:"/static/views/dashboard/templates/task.html",controller:"TaskTemplatesCtrl as $ctrl"}).state("dashboard.company-profile",{url:"/company/profile",templateUrl:"/static/views/dashboard/company/profile.html",controller:"CompanyProfileCtrl as $ctrl"}).state("dashboard.company-settings",{url:"/company/settings",templateUrl:"/static/views/dashboard/company/settings.html",controller:"CompanySettingsCtrl as $ctrl"}).state("photos",{url:"/photos?name",templateUrl:"/static/views/photos.html",controller:"PhotosCtrl"})}),app.directive("stringToNumber",function(){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$parsers.push(function(value){return""+value}),ngModel.$formatters.push(function(value){return parseFloat(value)})}}}),app.controller("CompanyProfileCtrl",function($scope,$rootScope,$http,$localStorage){$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_COMPANY],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_PROFILE],this.companyName=$localStorage.companyName,this.apiKey=$localStorage.apiKey}),app.controller("CompanySettingsCtrl",function($scope,$localStorage,$rootScope,ToastService,$http){var vm=this;$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_COMPANY],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_SETTINGS],vm.startHr=$localStorage.startHr,vm.endHr=$localStorage.endHr,vm.incrementStartHr=function(){23==vm.startHr?vm.startHr=0:vm.startHr++},vm.incrementEndHr=function(){23==vm.endHr?vm.endHr=0:vm.endHr++},vm.decrementStartHr=function(){0==vm.startHr?vm.startHr=23:vm.startHr--},vm.decrementEndHr=function(){0==vm.endHr?vm.endHr=23:vm.endHr--},vm.update=function(){$rootScope.showWaitingDialog("Please wait while settings are updating..."),$http({method:"POST",url:"/api/admin/accSettings",headers:{"X-Auth-Token":$localStorage.accessToken},data:{startHr:vm.startHr,endHr:vm.endHr}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Settings Successfully Updated!!!")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to Update settings!!!")})}}),app.controller("FormTemplatesCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService,TemplateDataService){var vm=this;function init(){vm.templates=TemplateDataService.cache.data.forms,vm.selection=[],vm.templates&&vm.templates.forEach(function(){vm.selection.push(!1)})}vm.edit=function(){var selectedItems=vm.getSelectedItems();1!=selectedItems.length?ToastService.toast("Please select a single template to edit..."):DialogService.formTemplateEditor(selectedItems[0],init)},vm.create=function(){DialogService.formTemplateEditor(null,init)},vm.toggleAll=function(){for(var i=0;i<vm.selection.length;i++)vm.selection[i]=vm.bCheckAll},vm.getSelectedItems=function(){for(var selectedItems=[],i=0;i<vm.selection.length;i++)vm.selection[i]&&selectedItems.push(vm.templates[i]);return selectedItems},vm.remove=function(){DialogService.confirm("Are you sure you want to remove these "+vm.getSelectedItems().length+" templates ?",function(){var templateId=[];vm.getSelectedItems().forEach(function(template){templateId.push(template.id)}),$rootScope.showWaitingDialog("Removing Templates..."),$http({method:"POST",url:"/api/admin/removeTemplates",headers:{"X-Auth-Token":$localStorage.accessToken},data:{templateIds:templateId}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Templates removed successfully..."),TemplateDataService.syncForms()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast(error.data.error)})})},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_TEMPLATES],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_FORM],vm.selection=[],vm.templates=[],vm.bCheckAll=!1,$scope.$on(Constants.Events.FORM_TEMPLATE_DATA_READY,function(event,data){init()}),init()}),app.controller("LeadManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,$window,ExcelService,DialogService,ToastService,LeadDataService,TemplateDataService){var vm=this;function init(){var columns;vm.leads=LeadDataService.cache.data,$scope.tableParams.columns=((columns=[]).push({title:"Title",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),columns.push({title:"Address",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_TEXT}),columns.push({title:"Location",type:Constants.Template.FIELD_TYPE_LOCATION,filterType:Constants.Filter.TYPE_NONE}),columns.push({title:"Template",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),vm.leads.forEach(function(lead){lead.templateData.values.forEach(function(value){var field=TemplateDataService.getFieldById(value.fieldId);if(field){for(var bColumnFound=!1,i=0;i<columns.length;i++){var column=columns[i];if(column.title==field.title&&column.type==field.type){bColumnFound=!0;break}}bColumnFound||columns.push({title:field.title,type:field.type,filterType:function(type){var filterType=Constants.Filter.TYPE_NONE;switch(type){case Constants.Template.FIELD_TYPE_TEXT:case Constants.Template.FIELD_TYPE_CHECKLIST:filterType=Constants.Filter.TYPE_TEXT;break;case Constants.Template.FIELD_TYPE_NUMBER:filterType=Constants.Filter.TYPE_NUMBER;break;case Constants.Template.FIELD_TYPE_RADIOLIST:case Constants.Template.FIELD_TYPE_CHECKBOX:filterType=Constants.Filter.TYPE_SELECTION}return filterType}(field.type)})}})}),columns),$scope.tableParams.values=function(columns){var values=[];return vm.leads.forEach(function(lead){var row=Array.apply(null,Array(columns.length)).map(function(){return"-"});row[0]=lead.title,row[1]=lead.address,row[2]=lead.latitude+","+lead.longitude;var template=TemplateDataService.getTemplateById(lead.templateId);template&&(row[3]=template.name,lead.templateData.values.forEach(function(value){var field=TemplateDataService.getFieldById(value.fieldId);if(field){var colIdx;for(colIdx=0;colIdx<columns.length;colIdx++){var column=columns[colIdx];if(column.title==field.title&&column.type==field.type)break}switch(field.type){case Constants.Template.FIELD_TYPE_TEXT:case Constants.Template.FIELD_TYPE_NUMBER:case Constants.Template.FIELD_TYPE_SIGN:case Constants.Template.FIELD_TYPE_PHOTO:row[colIdx]=value.value;break;case Constants.Template.FIELD_TYPE_RADIOLIST:row[colIdx]=value.value.options[value.value.selection];break;case Constants.Template.FIELD_TYPE_CHECKLIST:value.value.forEach(function(optionJson){optionJson.selection&&("-"==row[colIdx]?row[colIdx]=optionJson.name:row[colIdx]+=", "+optionJson.name)});break;case Constants.Template.FIELD_TYPE_CHECKBOX:value.value?row[colIdx]="Yes":row[colIdx]="No"}}}),values.push(row))}),values}($scope.tableParams.columns),$scope.$broadcast(Constants.Events.TABLE_INIT)}function getOwnedLeadsFromSelection(){var ownedLeads=[];return vm.selection.forEach(function(selection){selection.ownerId!=$localStorage.id&&$localStorage.role!=Constants.Role.ADMIN||ownedLeads.push(selection)}),ownedLeads}vm.add=function(){DialogService.leadEditor(null)},vm.export=function(){$scope.$broadcast(Constants.Events.TABLE_EXPORT,{filename:"Navimate-Leads"})},vm.clearFilters=function(){$scope.$broadcast(Constants.Events.TABLE_CLEAR_FILTERS)},vm.toggleColumns=function(){$scope.$broadcast(Constants.Events.TABLE_TOGGLE_COLUMNS)},vm.sync=function(){LeadDataService.sync()},vm.showOnMaps=function(lead){$window.open("https://www.google.com/maps/search/?api=1&query="+lead.latitude+","+lead.longitude,"_blank")},vm.remove=function(){var ownedLeads=getOwnedLeadsFromSelection();ownedLeads.length?(vm.selection.length>ownedLeads.selection&&ToastService.toast("You do not have permission to remove some of the selected leads. Removing from selection."),DialogService.confirm("Are you sure you want to remove "+ownedLeads.length+" leads ?",function(){$rootScope.showWaitingDialog("Please wait while we are removing leads..."),$http({method:"POST",url:"/api/users/lead/remove",headers:{"X-Auth-Token":$localStorage.accessToken},data:{leads:ownedLeads}}).then(function(response){$rootScope.hideWaitingDialog(),LeadDataService.sync(),ToastService.toast("leads removed...")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to remove leads!!!")})})):ToastService.toast("You do not have permission to remove any of the selected leads.")},vm.edit=function(){var ownedLeads=getOwnedLeadsFromSelection();ownedLeads.length?(vm.selection.length>ownedLeads.selection&&ToastService.toast("You do not have permission to edit some of the selected leads. Removing from selection."),DialogService.leadEditor(ownedLeads)):ToastService.toast("You do not have permission to edit any of the selected leads.")},vm.createtasks=function(){var task=[];vm.selection.forEach(function(lead){task.push({leadId:lead.id})}),DialogService.taskCreator(task)},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_LEADS],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE],vm.leads=[],vm.selection=[],vm.bCheckAll=!1,$scope.tableParams={},$scope.tableParams.columns=[],$scope.tableParams.values=[],$scope.tableParams.style={bStriped:!0,bSelectable:!0},$scope.$on(Constants.Events.LEAD_DATA_READY,function(event,data){init()}),$scope.$on(Constants.Events.LEAD_TEMPLATE_DATA_READY,function(event,data){init()}),$scope.$on(Constants.Events.TABLE_ROW_SELECT,function(event,params){vm.selection=[],params.selectedIndexes.forEach(function(selectedIdx){vm.selection.push(vm.leads[selectedIdx])})}),init()}),app.controller("LeadTemplatesCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService,TemplateDataService){var vm=this;function init(){vm.templates=TemplateDataService.cache.data.leads,vm.selection=[],vm.templates&&vm.templates.forEach(function(){vm.selection.push(!1)})}vm.edit=function(){var selectedItems=vm.getSelectedItems();1!=selectedItems.length?ToastService.toast("Please select a single template to edit..."):DialogService.leadTemplateEditor(selectedItems[0])},vm.create=function(){DialogService.leadTemplateEditor(null)},vm.toggleAll=function(){for(var i=0;i<vm.selection.length;i++)vm.selection[i]=vm.bCheckAll},vm.getSelectedItems=function(){for(var selectedItems=[],i=0;i<vm.selection.length;i++)vm.selection[i]&&selectedItems.push(vm.templates[i]);return selectedItems},vm.remove=function(){DialogService.confirm("Are you sure you want to remove these "+vm.getSelectedItems().length+" templates ?",function(){var templateId=[];vm.getSelectedItems().forEach(function(template){templateId.push(template.id)}),$rootScope.showWaitingDialog("Removing Templates..."),$http({method:"POST",url:"/api/admin/removeTemplates",headers:{"X-Auth-Token":$localStorage.accessToken},data:{templateIds:templateId}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Templates removed successfully..."),TemplateDataService.syncLeads()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast(error.data.error)})})},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_TEMPLATES],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_LEAD],vm.selection=[],vm.templates=[],vm.bCheckAll=!1,$scope.$on(Constants.Events.LEAD_TEMPLATE_DATA_READY,function(event,data){init()}),init()}),app.controller("ReportCtrl",function($scope,$rootScope,$http,$localStorage,ToastService){var vm=this;vm.syncTable=function(){$rootScope.showWaitingDialog("Please wait while we are fetching the report..."),$http({method:"GET",url:"/api/users/report",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.tableParams.columns=response.data.columns,$scope.tableParams.values=response.data.values,$scope.$broadcast(Constants.Events.TABLE_INIT)},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load report !!!")})},vm.export=function(){$scope.$broadcast(Constants.Events.TABLE_EXPORT,{filename:"Navimate-Report"})},vm.clearFilters=function(){$scope.$broadcast(Constants.Events.TABLE_CLEAR_FILTERS)},vm.toggleColumns=function(){$scope.$broadcast(Constants.Events.TABLE_TOGGLE_COLUMNS)},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_REPORTS],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_REPORT],$scope.tableParams={},$scope.tableParams.style={bBordered:!0},$scope.tableParams.columns=[],$scope.tableParams.values=[],vm.syncTable()}),app.controller("TaskCloseCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService,TaskDataService,LeadDataService,TeamDataService,TemplateDataService){var vm=this;function initTasks(){var columns;vm.tasks=[],TaskDataService.cache.data.forEach(function(task){"CLOSED"==task.status&&vm.tasks.push(task)}),$scope.tableParams.columns=((columns=[]).push({title:"ID",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),columns.push({title:"Lead",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),columns.push({title:"Rep",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),columns.push({title:"Period",type:Constants.Template.FIELD_TYPE_NUMBER,filterType:Constants.Filter.TYPE_NUMBER}),columns.push({title:"Form",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),columns.push({title:"Template",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),vm.tasks.forEach(function(task){task.templateData.values.forEach(function(value){var field=TemplateDataService.getFieldById(value.fieldId);if(field){for(var bColumnFound=!1,i=0;i<columns.length;i++){var column=columns[i];if(column.title==field.title&&column.type==field.type){bColumnFound=!0;break}}bColumnFound||columns.push({title:field.title,type:field.type,filterType:function(type){var filterType=Constants.Filter.TYPE_NONE;switch(type){case Constants.Template.FIELD_TYPE_TEXT:case Constants.Template.FIELD_TYPE_CHECKLIST:filterType=Constants.Filter.TYPE_TEXT;break;case Constants.Template.FIELD_TYPE_NUMBER:filterType=Constants.Filter.TYPE_NUMBER;break;case Constants.Template.FIELD_TYPE_RADIOLIST:case Constants.Template.FIELD_TYPE_CHECKBOX:filterType=Constants.Filter.TYPE_SELECTION}return filterType}(field.type)})}})}),columns),$scope.tableParams.values=function(columns){var values=[];return vm.tasks.forEach(function(task){var row=Array.apply(null,Array(columns.length)).map(function(){return"-"});row[0]=task.cId;var lead=LeadDataService.getById(task.leadId);if(lead){row[1]=lead.title;var rep=TeamDataService.getById(task.repId);row[2]=rep?rep.name:"Unassigned",row[3]=task.period;var formTemplate=TemplateDataService.getTemplateById(task.formTemplateId);if(formTemplate){row[4]=formTemplate.name;var taskTemplate=TemplateDataService.getTemplateById(task.templateId);taskTemplate&&(row[5]=taskTemplate.name,task.templateData.values.forEach(function(value){var field=TemplateDataService.getFieldById(value.fieldId);if(field){var colIdx;for(colIdx=0;colIdx<columns.length;colIdx++){var column=columns[colIdx];if(column.title==field.title&&column.type==field.type)break}switch(field.type){case Constants.Template.FIELD_TYPE_TEXT:case Constants.Template.FIELD_TYPE_NUMBER:case Constants.Template.FIELD_TYPE_SIGN:case Constants.Template.FIELD_TYPE_PHOTO:row[colIdx]=value.value;break;case Constants.Template.FIELD_TYPE_RADIOLIST:row[colIdx]=value.value.options[value.value.selection];break;case Constants.Template.FIELD_TYPE_CHECKLIST:value.value.forEach(function(optionJson){optionJson.selection&&("-"==row[colIdx]?row[colIdx]=optionJson.name:row[colIdx]+=", "+optionJson.name)});break;case Constants.Template.FIELD_TYPE_CHECKBOX:value.value?row[colIdx]="Yes":row[colIdx]="No"}}}),values.push(row))}}}),values}($scope.tableParams.columns),$scope.$broadcast(Constants.Events.TABLE_INIT)}vm.add=function(){DialogService.taskCreator(null)},vm.export=function(){$scope.$broadcast(Constants.Events.TABLE_EXPORT,{filename:"Navimate-Tasks"})},vm.clearFilters=function(){$scope.$broadcast(Constants.Events.TABLE_CLEAR_FILTERS)},vm.toggleColumns=function(){$scope.$broadcast(Constants.Events.TABLE_TOGGLE_COLUMNS)},vm.sync=function(){TaskDataService.sync()},vm.remove=function(){DialogService.confirm("Are you sure you want to remove these "+vm.selection.length+" tasks ?",function(){$rootScope.showWaitingDialog("Removing Tasks..."),$http({method:"POST",url:"/api/users/task/remove",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:vm.selection}}).then(function(response){$rootScope.hideWaitingDialog(),TaskDataService.sync(),ToastService.toast("Tasks removed successfully...")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to remove tasks!!!")})})},vm.stopRenewal=function(){DialogService.confirm("Are you sure you want to stop renewal for "+vm.selection.length+" tasks ?",function(){$rootScope.showWaitingDialog("Stopping renewal period..."),$http({method:"POST",url:"/api/users/task/stoprenew",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:vm.selection}}).then(function(response){$rootScope.hideWaitingDialog(),TaskDataService.sync(),ToastService.toast("renewal period stopped...")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to stop renewal!!!")})})},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_TASKS],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_CLOSE],vm.tasks=[],vm.selection=[],vm.bCheckAll=!1,$scope.tableParams={},$scope.tableParams.columns=[],$scope.tableParams.values=[],$scope.tableParams.style={bStriped:!0,bSelectable:!0},$scope.$on(Constants.Events.TASK_DATA_READY,function(event,data){initTasks()}),$scope.$on(Constants.Events.LEAD_DATA_READY,function(event,data){initTasks()}),$scope.$on(Constants.Events.TEAM_DATA_READY,function(event,data){initTasks()}),$scope.$on(Constants.Events.TASK_TEMPLATE_DATA_READY,function(event,data){initTasks()}),$scope.$on(Constants.Events.TABLE_ROW_SELECT,function(event,params){vm.selection=[],params.selectedIndexes.forEach(function(selectedIdx){vm.selection.push(vm.tasks[selectedIdx])})}),initTasks()}),app.controller("TaskOpenCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService,TaskDataService,LeadDataService,TeamDataService,TemplateDataService){var vm=this;function initTasks(){var columns;vm.tasks=[],TaskDataService.cache.data.forEach(function(task){"OPEN"==task.status&&vm.tasks.push(task)}),$scope.tableParams.columns=((columns=[]).push({title:"ID",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),columns.push({title:"Lead",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),columns.push({title:"Rep",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),columns.push({title:"Period",type:Constants.Template.FIELD_TYPE_NUMBER,filterType:Constants.Filter.TYPE_NUMBER}),columns.push({title:"Form",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),columns.push({title:"Template",type:Constants.Template.FIELD_TYPE_TEXT,filterType:Constants.Filter.TYPE_SELECTION}),vm.tasks.forEach(function(task){task.templateData.values.forEach(function(value){var field=TemplateDataService.getFieldById(value.fieldId);if(field){for(var bColumnFound=!1,i=0;i<columns.length;i++){var column=columns[i];if(column.title==field.title&&column.type==field.type){bColumnFound=!0;break}}bColumnFound||columns.push({title:field.title,type:field.type,filterType:function(type){var filterType=Constants.Filter.TYPE_NONE;switch(type){case Constants.Template.FIELD_TYPE_TEXT:case Constants.Template.FIELD_TYPE_CHECKLIST:filterType=Constants.Filter.TYPE_TEXT;break;case Constants.Template.FIELD_TYPE_NUMBER:filterType=Constants.Filter.TYPE_NUMBER;break;case Constants.Template.FIELD_TYPE_RADIOLIST:case Constants.Template.FIELD_TYPE_CHECKBOX:filterType=Constants.Filter.TYPE_SELECTION}return filterType}(field.type)})}})}),columns),$scope.tableParams.values=function(columns){var values=[];return vm.tasks.forEach(function(task){var row=Array.apply(null,Array(columns.length)).map(function(){return"-"});row[0]=task.cId;var lead=LeadDataService.getById(task.leadId);if(lead){row[1]=lead.title;var rep=TeamDataService.getById(task.repId);row[2]=rep?rep.name:"Unassigned",row[3]=task.period;var formTemplate=TemplateDataService.getTemplateById(task.formTemplateId);if(formTemplate){row[4]=formTemplate.name;var taskTemplate=TemplateDataService.getTemplateById(task.templateId);taskTemplate&&(row[5]=taskTemplate.name,task.templateData.values.forEach(function(value){var field=TemplateDataService.getFieldById(value.fieldId);if(field){var colIdx;for(colIdx=0;colIdx<columns.length;colIdx++){var column=columns[colIdx];if(column.title==field.title&&column.type==field.type)break}switch(field.type){case Constants.Template.FIELD_TYPE_TEXT:case Constants.Template.FIELD_TYPE_NUMBER:case Constants.Template.FIELD_TYPE_SIGN:case Constants.Template.FIELD_TYPE_PHOTO:row[colIdx]=value.value;break;case Constants.Template.FIELD_TYPE_RADIOLIST:row[colIdx]=value.value.options[value.value.selection];break;case Constants.Template.FIELD_TYPE_CHECKLIST:value.value.forEach(function(optionJson){optionJson.selection&&("-"==row[colIdx]?row[colIdx]=optionJson.name:row[colIdx]+=", "+optionJson.name)});break;case Constants.Template.FIELD_TYPE_CHECKBOX:value.value?row[colIdx]="Yes":row[colIdx]="No"}}}),values.push(row))}}}),values}($scope.tableParams.columns),$scope.$broadcast(Constants.Events.TABLE_INIT)}vm.add=function(){DialogService.taskCreator(null)},vm.export=function(){$scope.$broadcast(Constants.Events.TABLE_EXPORT,{filename:"Navimate-Tasks"})},vm.clearFilters=function(){$scope.$broadcast(Constants.Events.TABLE_CLEAR_FILTERS)},vm.toggleColumns=function(){$scope.$broadcast(Constants.Events.TABLE_TOGGLE_COLUMNS)},vm.sync=function(){TaskDataService.sync()},vm.edit=function(){DialogService.taskCreator(vm.selection)},vm.close=function(){DialogService.confirm("Are you sure you want to close these "+vm.selection.length+" tasks ?",function(){$rootScope.showWaitingDialog("Closing Tasks..."),$http({method:"POST",url:"/api/users/task/close",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:vm.selection}}).then(function(response){$rootScope.hideWaitingDialog(),TaskDataService.sync(),ToastService.toast("Tasks closed...")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to close tasks!!!")})})},vm.remove=function(){DialogService.confirm("Are you sure you want to remove these "+vm.selection.length+" tasks ?",function(){$rootScope.showWaitingDialog("Removing Tasks..."),$http({method:"POST",url:"/api/users/task/remove",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:vm.selection}}).then(function(response){$rootScope.hideWaitingDialog(),TaskDataService.sync(),ToastService.toast("Tasks removed successfully...")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to remove tasks!!!")})})},vm.stopRenewal=function(){DialogService.confirm("Are you sure you want to stop renewal for "+vm.selection.length+" tasks ?",function(){$rootScope.showWaitingDialog("Stopping renewal period..."),$http({method:"POST",url:"/api/users/task/stoprenew",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:vm.selection}}).then(function(response){$rootScope.hideWaitingDialog(),TaskDataService.sync(),ToastService.toast("renewal period stopped...")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to stop renewal!!!")})})},vm.showMap=function(){var locations=[];vm.selection.forEach(function(task){var lead=LeadDataService.getById(task.leadId);locations.push({title:lead.title,latitude:lead.latitude,longitude:lead.longitude})}),DialogService.locationViewer(locations)},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_TASKS],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_OPEN],vm.tasks=[],vm.selection=[],vm.bCheckAll=!1,$scope.tableParams={},$scope.tableParams.columns=[],$scope.tableParams.values=[],$scope.tableParams.style={bStriped:!0,bSelectable:!0},$scope.$on(Constants.Events.TASK_DATA_READY,function(event,data){initTasks()}),$scope.$on(Constants.Events.LEAD_DATA_READY,function(event,data){initTasks()}),$scope.$on(Constants.Events.TEAM_DATA_READY,function(event,data){initTasks()}),$scope.$on(Constants.Events.TASK_TEMPLATE_DATA_READY,function(event,data){initTasks()}),$scope.$on(Constants.Events.TABLE_ROW_SELECT,function(event,params){vm.selection=[],params.selectedIndexes.forEach(function(selectedIdx){vm.selection.push(vm.tasks[selectedIdx])})}),initTasks()}),app.controller("TaskTemplatesCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService,TemplateDataService){var vm=this;function init(){vm.templates=TemplateDataService.cache.data.tasks,vm.selection=[],vm.templates&&vm.templates.forEach(function(){vm.selection.push(!1)})}vm.edit=function(){var selectedItems=vm.getSelectedItems();1!=selectedItems.length?ToastService.toast("Please select a single template to edit..."):DialogService.taskTemplateEditor(selectedItems[0])},vm.create=function(){DialogService.taskTemplateEditor(null)},vm.toggleAll=function(){for(var i=0;i<vm.selection.length;i++)vm.selection[i]=vm.bCheckAll},vm.getSelectedItems=function(){for(var selectedItems=[],i=0;i<vm.selection.length;i++)vm.selection[i]&&selectedItems.push(vm.templates[i]);return selectedItems},vm.remove=function(){DialogService.confirm("Are you sure you want to remove these "+vm.getSelectedItems().length+" templates ?",function(){var templateId=[];vm.getSelectedItems().forEach(function(template){templateId.push(template.id)}),$rootScope.showWaitingDialog("Removing Templates..."),$http({method:"POST",url:"/api/admin/removeTemplates",headers:{"X-Auth-Token":$localStorage.accessToken},data:{templateIds:templateId}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Templates removed successfully..."),TemplateDataService.syncTasks()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast(error.data.error)})})},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_TEMPLATES],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_TASK],vm.selection=[],vm.templates=[],vm.bCheckAll=!1,$scope.$on(Constants.Events.TASK_TEMPLATE_DATA_READY,function(event,data){init()}),init()}),app.controller("TeamManageCtrl",function($scope,$rootScope,$http,$localStorage,$state,DialogService,ToastService,TeamDataService){var vm=this;function init(){vm.selection=[],vm.team=TeamDataService.cache.data,vm.team&&vm.team.forEach(function(){vm.selection.push(!1)})}vm.add=function(){DialogService.addRep(init)},vm.track=function(){DialogService.liveTracking(vm.getSelectedItems())},vm.toggleAll=function(){for(var i=0;i<vm.selection.length;i++)vm.selection[i]=vm.bCheckAll},vm.getSelectedItems=function(){for(var selectedItems=[],i=0;i<vm.selection.length;i++)vm.selection[i]&&selectedItems.push(vm.team[i]);return selectedItems},vm.remove=function(){DialogService.confirm("Are you sure you want to remove these "+vm.getSelectedItems().length+" members from your team ?",function(){$rootScope.showWaitingDialog("Please wait while we are removing members..."),$http({method:"POST",url:"/api/users/team/remove",headers:{"X-Auth-Token":$localStorage.accessToken},data:{reps:JSON.stringify(vm.getSelectedItems())}}).then(function(response){$rootScope.hideWaitingDialog(),TeamDataService.sync(),ToastService.toast("Reps removed..."),init()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Failed to remove reps!!!"),init()})})},vm.createtasks=function(){var task=[];vm.selection.forEach(function(bSelected,i){bSelected&&task.push({repId:vm.team[i].id})}),DialogService.taskCreator(task)},$scope.nav.item=Constants.DashboardNav.Menu[Constants.DashboardNav.ITEM_TEAM],$scope.nav.option=Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE],vm.team=[],vm.selection=[],vm.bCheckAll=!1,$scope.$on(Constants.Events.TEAM_DATA_READY,function(event,data){init()}),init()}),app.controller("DashboardCtrl",function($scope,$rootScope,$state,$window,$localStorage,AuthService,DialogService,TeamDataService,LeadDataService,TemplateDataService,TaskDataService,ToastService){$scope.nav={},$scope.name=$localStorage.name,$scope.role=$localStorage.role;var bLeadSync,bTeamSync,bTaskSync,bFormTemplateSync,bLeadTemplateSync,bTaskTemplateSync=!1;function checkSync(){bLeadSync&&bTeamSync&&bTaskSync&&bFormTemplateSync&&bLeadTemplateSync&&bTaskTemplateSync&&$rootScope.hideWaitingDialog()}$rootScope.showWaitingDialog("Please wait while we are fetching data..."),TeamDataService.sync(),LeadDataService.sync(),TemplateDataService.syncForms(),TemplateDataService.syncLeads(),TemplateDataService.syncTasks(),TaskDataService.sync(),$rootScope.getRepById=TeamDataService.getById,$rootScope.getLeadById=LeadDataService.getById,$rootScope.getTaskById=TaskDataService.getById,$rootScope.getTemplateById=TemplateDataService.getTemplateById,$rootScope.getFieldById=TemplateDataService.getFieldById,$scope.logout=function(){$rootScope.showWaitingDialog("Please wait while you are being logged out..."),AuthService.logout().then(function(response){$rootScope.hideWaitingDialog(),$localStorage.accessToken="",$state.go("home")},function(error){$rootScope.hideWaitingDialog(),console.log(error)})},$scope.changePassword=function(){DialogService.changePassword()},$scope.openHelp=function(){$window.open($state.href("help"),"_blank")},$scope.optionClicked=function(state){$state.go(state)},$scope.$on(Constants.Events.LEAD_DATA_READY,function(event,params){bLeadSync=!0,checkSync()}),$scope.$on(Constants.Events.TASK_DATA_READY,function(event,params){bTaskSync=!0,checkSync()}),$scope.$on(Constants.Events.TEAM_DATA_READY,function(event,params){bTeamSync=!0,checkSync()}),$scope.$on(Constants.Events.FORM_TEMPLATE_DATA_READY,function(event,params){bFormTemplateSync=!0,checkSync()}),$scope.$on(Constants.Events.LEAD_TEMPLATE_DATA_READY,function(event,params){bLeadTemplateSync=!0,checkSync()}),$scope.$on(Constants.Events.TASK_TEMPLATE_DATA_READY,function(event,params){bTaskTemplateSync=!0,checkSync()});var bError=!1;$scope.$on(Constants.Events.DATA_LOAD_ERROR,function(event,params){bError||(bError=!0,$rootScope.hideWaitingDialog(),ToastService.toast("Unable to load data !!!"))})}),app.controller("AddRepCtrl",function($scope,$rootScope,$http,$localStorage,$mdDialog,ToastService,teamUpdateCb,TeamDataService){$scope.add=function(){if(function(){var bValid=!0;$scope.bNameError=!1,$scope.bPhoneError=!1,$scope.name||(bValid=!1,$scope.bNameError=!0);$scope.phoneNumber||(bValid=!1,$scope.bPhoneError=!0);bValid||ToastService.toast("Please fill all fields.");return bValid}()){var phone;phone=$scope.countryCode?"+"+$scope.countryCode+$scope.phoneNumber:"+91"+$scope.phoneNumber;var email=$scope.email?$scope.email:"";$rootScope.showWaitingDialog("Please wait while we are adding rep..."),$http({method:"POST",url:"/api/users/team",headers:{"X-Auth-Token":$localStorage.accessToken},data:{name:$scope.name,phoneNumber:phone,email:email}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),TeamDataService.sync(),ToastService.toast("An SMS has been sent to the rep..."),teamUpdateCb()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to add rep"),console.log(error)})}},$scope.cancel=function(){$mdDialog.hide()}}),app.controller("AlertCtrl",function($scope,$mdDialog,message){$scope.message=message,$scope.ok=function(){$mdDialog.hide()}}),app.controller("ChangePasswordCtrl",function($scope,$rootScope,$mdDialog,$localStorage,$http,$cookies,ToastService){$scope.change=function(){(function(){if(!$scope.oldPassword||!$scope.newPassword||!$scope.confirmPassword)return $scope.bShowError=!0,ToastService.toast("Please fill all fields !!!"),!1;if($scope.newPassword!=$scope.confirmPassword)return ToastService.toast("New and confirmed passwords do not match !!!"),!1;return!0})()&&($rootScope.showWaitingDialog("Please wait while we update your password..."),$http({method:"POST",url:"/api/users/changePassword",headers:{"X-Auth-Token":$localStorage.accessToken},data:{oldPassword:$scope.oldPassword,newPassword:$scope.newPassword}}).then(function(response){if($rootScope.hideWaitingDialog(),$cookies.get(Constants.Cookie.KEY_PASSWORD)){var expireDate=new Date;expireDate.setDate(expireDate.getDate()+7),$cookies.put(Constants.Cookie.KEY_PASSWORD,$scope.newPassword,{expires:expireDate})}$mdDialog.hide(),ToastService.toast("Your password has been updated...")},function(error){$rootScope.hideWaitingDialog(),400==error.status&&ToastService.toast("Incorrect current password entered...")}))},$scope.close=function(){$mdDialog.hide()},$scope.bShowError=!1}),app.controller("ConfirmCtrl",function($scope,$mdDialog,message,yesCb){$scope.message=message,$scope.yes=function(){$mdDialog.hide(),yesCb()},$scope.no=function(){$mdDialog.hide()}}),app.controller("EmailVerifyCtrl",function($scope,$rootScope,$mdDialog,AuthService,DialogService,ToastService,name,email,password,role,companyName){var otp_gen;$scope.emailVerify=function(){(function(){if(!$scope.otp)return $scope.bShowError=!0,ToastService.toast("Please enter the OTP sent to Email ID provided"),!1;if($scope.otp!=otp_gen)return $scope.bShowError=!0,ToastService.toast("Invalid OTP Entered"),!1;return!0})()&&($rootScope.showWaitingDialog("Please wait while you are being registered..."),AuthService.register(name,email,password,role,companyName).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Registered successfully..."),DialogService.login()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast(error.data.error),DialogService.register(name,email,password,role,companyName)}))},$scope.cancel=function(){DialogService.register(name,email,password,role,companyName)},$scope.bShowError=!1,otp_gen=Math.floor(1e5+9e5*Math.random()),$rootScope.showWaitingDialog("Please wait while OTP is sent to mail ID"),AuthService.emailOtp(otp_gen,email).then(function(response){ToastService.toast("Email Sent Successfully."),$rootScope.hideWaitingDialog()},function(error){ToastService.toast("Error While Sending OTP to Email."),$rootScope.hideWaitingDialog(),DialogService.register(name,email,password)})}),app.controller("FormTemplateEditorCtrl",function($scope,$rootScope,$mdDialog,$http,$localStorage,ToastService,template,updateCb,TemplateDataService){this.close=function(){$mdDialog.hide()},this.save=function(){$scope.$broadcast(Constants.Events.TEMPLATE_VALIDATE)},$scope.template=template?JSON.parse(JSON.stringify(template)):{type:Constants.Template.TYPE_FORM,name:"",fields:[],defaultData:{values:[]}},$scope.availableFieldTypes=Constants.Template.FORM_FIELD_TYPES,$scope.$on(Constants.Events.TEMPLATE_VALIDATE_SUCCESS,function(event,args){$rootScope.showWaitingDialog("Please wait while template is being saved..."),$http({method:"POST",url:"/api/admin/template",headers:{"X-Auth-Token":$localStorage.accessToken},data:{template:$scope.template}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Template saved successfully..."),TemplateDataService.syncForms()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast(error.data.error)})})}),app.controller("LeadEditorCtrl",function($scope,$rootScope,$mdDialog,$http,$localStorage,ToastService,GoogleApiService,ExcelService,LeadDataService,TemplateDataService,leads){function scrollList(index){var list=$(".dialog-container .list-group")[0],items=$(list).find(".list-group-item"),scrollingOffset=0;index>=items.length?scrollingOffset=$(document).height():index>0&&(scrollingOffset=$(items[index]).offset().top-$(items[0]).offset().top),$(list).animate({scrollTop:scrollingOffset})}$scope.add=function(){var lead={latitude:googleMap.getCenter().lat(),longitude:googleMap.getCenter().lng()};$scope.leads.push(lead),$scope.updateTemplate($scope.leads.length-1,0),$scope.listItemClick(lead),scrollList($scope.leads.length)},$scope.updateTemplate=function(leadIdx,templateIdx){var lead=$scope.leads[leadIdx],template=$scope.templates[templateIdx];if(lead.templateId!=template.id){var templateData={values:[]};template.defaultData.values.forEach(function(value){var field=$rootScope.getFieldById(value.fieldId);field.type==Constants.Template.FIELD_TYPE_CHECKLIST||field.type==Constants.Template.FIELD_TYPE_RADIOLIST?templateData.values.push({fieldId:value.fieldId,value:JSON.parse(JSON.stringify(value.value))}):templateData.values.push({fieldId:value.fieldId,value:value.value})}),lead.templateData=templateData,lead.templateId=template.id}},$scope.getTemplateById=TemplateDataService.getTemplateById,$scope.getFieldById=TemplateDataService.getFieldById,$scope.listItemClick=function(lead){$scope.selectedLead=lead,$scope.searchResults=[],googleMap&&googleMap.panTo(new google.maps.LatLng(lead.latitude,lead.longitude))},$scope.remove=function(lead){var idx=$scope.leads.indexOf(lead);idx>=0&&$scope.leads.splice(idx,1)},$scope.searchAddress=function(){$scope.selectedLead.address&&($scope.bSearchWaiting=!0,$scope.searchResults=[],GoogleApiService.autoComplete($scope.selectedLead.address,function(results){$scope.searchResults=results,$scope.bSearchWaiting=!1},function(){$scope.bSearchWaiting=!1}))},$scope.searchResultClick=function(searchResult){$scope.selectedLead.address=searchResult.address,$scope.selectedLead.latitude=0,$scope.selectedLead.longitude=0,GoogleApiService.addressToLatlng(searchResult.address,function(lat,lng){$scope.selectedLead.latitude=lat,$scope.selectedLead.longitude=lng,googleMap.panTo(new google.maps.LatLng(lat,lng))})},$scope.save=function(){(function(){if($scope.bShowError=!1,0==$scope.leads.length)return ToastService.toast("Please add some leads to save..."),!1;for(var i=0;i<$scope.leads.length;i++){var lead=$scope.leads[i];if(!$scope.isLeadValid(lead))return $scope.bShowError=!0,scrollList(i),ToastService.toast("Please fill all fields in leads..."),!1}return!0})()&&($rootScope.showWaitingDialog("Please wait while leads are added..."),$http({method:"POST",url:"/api/users/lead",headers:{"X-Auth-Token":$localStorage.accessToken},data:{leads:$scope.leads}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Leads added succesfully..."),LeadDataService.sync()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to update leads !!!"),console.log(error)}))},$scope.isLeadValid=function(lead){return lead.title&&lead.latitude&&lead.longitude&&lead.address},$scope.mapInitialized=function(map){if(googleMap=map,$scope.leads.length){var bounds=new google.maps.LatLngBounds;$scope.leads.forEach(function(lead){bounds.extend(new google.maps.LatLng(lead.latitude,lead.longitude))}),googleMap.fitBounds(bounds)}google.maps.event.trigger(googleMap,"resize"),$scope.$apply()},$scope.getMarkerIcon=function(lead){return $scope.selectedLead==lead?{url:"/static/images/marker_selected.png",scaledSize:[40,40]}:{url:"/static/images/marker_default.png",scaledSize:[40,40]}},$scope.markerClicked=function(e,lead){$scope.listItemClick(lead),scrollList($scope.leads.indexOf(lead))},$scope.markerDragged=function(e,lead){lead.latitude=e.latLng.lat(),lead.longitude=e.latLng.lng(),lead.address="",GoogleApiService.latlngToAddress(lead.latitude,lead.longitude,function(address){lead.address=address})},$scope.excelRead=function(workbook){$rootScope.showWaitingDialog("Please wait while we are reading from excel file..."),ExcelService.excelRead(workbook).then(function(response){$rootScope.hideWaitingDialog(),response.data.forEach(function(lead){$scope.leads.push(lead)});for(var i=$scope.leads.length-1;i>=0;i--){var lead=$scope.leads[i];lead.title||lead.description||lead.phoneNumber||lead.address||$scope.leads.splice(i,1)}},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to parse uploaded file. Please make sure file is as per template.")})},$scope.excelError=function(e){ToastService.toast("Invalid file for uploading leads...")},$scope.uploadTemplate=function(){ExcelService.leadUploadTemplate()},$scope.cancel=function(){$mdDialog.hide()},$scope.leads=[],$scope.selectedLead={},$scope.bShowError=!1,$scope.searchResults=[],$scope.bSearchWaiting=!1,$scope.mapCenter=[21,79],$scope.mapZoom=4;var googleMap=null;leads&&($scope.leads=leads,$scope.selectedLead=$scope.leads[0]),$scope.templates=TemplateDataService.cache.data.leads}),app.controller("LeadTemplateEditorCtrl",function($scope,$rootScope,$mdDialog,$http,$localStorage,ToastService,TemplateDataService,template){this.close=function(){$mdDialog.hide()},this.save=function(){$scope.$broadcast(Constants.Events.TEMPLATE_VALIDATE)},$scope.template=template?JSON.parse(JSON.stringify(template)):{name:"",type:Constants.Template.TYPE_LEAD,fields:[],defaultData:{values:[]}},$scope.availableFieldTypes=Constants.Template.LEAD_FIELD_TYPES,$scope.$on(Constants.Events.TEMPLATE_VALIDATE_SUCCESS,function(event,args){$rootScope.showWaitingDialog("Please wait while template is being saved..."),$http({method:"POST",url:"/api/admin/template",headers:{"X-Auth-Token":$localStorage.accessToken},data:{template:$scope.template}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Template saved successfully..."),TemplateDataService.syncLeads()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast(error.data.error)})})}),app.controller("LiveTrackingCtrl",function($scope,$rootScope,$mdDialog,$interval,$localStorage,ToastService,DialogService,reps){var vm=this;function trackingUpdateCb(message){var msgBody=JSON.parse(message.body),rep=getRepById(msgBody.repId);rep.lastUpdateTimeMs=msgBody.timestamp,rep.speed=msgBody.speed,rep.status=Constants.Tracking.ERROR_NONE;var marker=$scope.mapParams.markers[vm.reps.indexOf(rep)];marker.latitude=msgBody.latitude,marker.longitude=msgBody.longitude,bFirstUpdate&&(bFirstUpdate=!1,$scope.$broadcast(Constants.Events.MAP_CENTER,{latitude:marker.latitude,longitude:marker.longitude}))}function trackingErrorCb(message){var msgBody=JSON.parse(message.body);getRepById(msgBody.repId).status=msgBody.errorCode}function getRepById(id){for(var rep=null,i=0;i<vm.reps.length;i++)vm.reps[i].id==id&&(rep=vm.reps[i]);return rep}vm.refreshAll=function(){var repIds=[];vm.reps.forEach(function(rep){repIds.push(rep.id),rep.status=Constants.Tracking.ERROR_WAITING}),wsClient.send("/rxc/start-tracking",{},JSON.stringify({reps:repIds}))},vm.close=function(){$mdDialog.hide()},vm.listItemClick=function(idx){vm.selectedRep=vm.reps[idx];var marker=$scope.mapParams.markers[idx];$scope.$broadcast(Constants.Events.MAP_CENTER,{latitude:marker.latitude,longitude:marker.longitude})},vm.reps=reps,vm.selectedRep=vm.reps[0];var refreshCb=null,bFirstUpdate=!0,socket=new SockJS("/ws-endpoint"),wsClient=Stomp.over(socket);$scope.mapParams={},$scope.mapParams.markers=[],vm.reps.forEach(function(rep){$scope.mapParams.markers.push({title:rep.name,latitude:0,longitude:0}),rep.status=Constants.Tracking.ERROR_WAITING}),$scope.$on(Constants.Events.MAP_MARKER_CLICK,function(event,params){vm.listItemClick(params.idx)}),$scope.$on("$destroy",function(){wsClient.disconnect(),refreshCb&&$interval.cancel(refreshCb)}),wsClient.connect({id:$localStorage.id},function(){wsClient.subscribe("/user/txc/tracking-update",trackingUpdateCb),wsClient.subscribe("/user/txc/tracking-error",trackingErrorCb),refreshCb=$interval(function(){},1e3),vm.refreshAll()},function(){DialogService.alert("Unable to start live tracking. Your session may have expired !!!")})}),app.controller("LocationViewerCtrl",function($scope,locations){$scope.mapParams={},$scope.mapParams.markers=[],locations.forEach(function(location){$scope.mapParams.markers.push({title:location.title,latitude:location.latitude,longitude:location.longitude})})}),app.controller("LoginCtrl",function($scope,$rootScope,$mdDialog,$state,$http,$localStorage,$cookies,AuthService,DialogService,ToastService){$scope.login=function(){(function(){if(!$scope.email||!$scope.password)return $scope.bShowError=!0,ToastService.toast("Please fill all fields !!!"),!1;return!0})()&&($rootScope.showWaitingDialog("Please wait while we log you in..."),AuthService.login($scope.email,$scope.password).then(function(response){if($localStorage.accessToken=response.data.accessToken,$localStorage.id=response.data.id,$localStorage.name=response.data.name,$localStorage.role=response.data.role,$localStorage.companyName=response.data.companyName,$localStorage.role==Constants.Role.ADMIN&&($localStorage.apiKey=response.data.apiKey,$localStorage.startHr=response.data.startHr,$localStorage.endHr=response.data.endHr),$scope.bRemember){var expireDate=new Date;expireDate.setDate(expireDate.getDate()+7),$cookies.put(Constants.Cookie.KEY_EMAIL,$scope.email,{expires:expireDate}),$cookies.put(Constants.Cookie.KEY_PASSWORD,$scope.password,{expires:expireDate})}else $cookies.remove(Constants.Cookie.KEY_EMAIL),$cookies.remove(Constants.Cookie.KEY_PASSWORD);$rootScope.hideWaitingDialog(),$mdDialog.hide(),$state.go("dashboard.team-manage")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Invalid Credentials...")}))},$scope.forgotPassword=function(){$scope.email?($rootScope.showWaitingDialog("Please wait while we email your password.."),$http({method:"POST",url:"/api/auth/forgotPassword",data:{email:$scope.email}}).then(function(response){$rootScope.hideWaitingDialog(),ToastService.toast("Your password has been mailed to your email ID...")},function(error){$rootScope.hideWaitingDialog(),400==error.status?ToastService.toast("Unknown email provided..."):ToastService.toast("Unable to email your password...")})):ToastService.toast("Please enter a valid Email Id...")},$scope.register=function(){DialogService.register("","","")},$scope.cancel=function(){$mdDialog.hide()},$scope.bShowError=!1,$scope.bRemember=!1,$scope.email="",$scope.password="";var savedEmail=$cookies.get(Constants.Cookie.KEY_EMAIL),savedPassword=$cookies.get(Constants.Cookie.KEY_PASSWORD);(savedEmail||savedPassword)&&($scope.bRemember=!0,$scope.email=savedEmail,$scope.password=savedPassword)}),app.controller("RegisterCtrl",function($scope,$rootScope,$mdDialog,AuthService,DialogService,ToastService,name,email,password,role,companyName){$scope.register=function(){(function(){if(!($scope.email&&$scope.password&&$scope.name&&$scope.confirmPassword&&$scope.role&&$scope.companyName))return $scope.bShowError=!0,ToastService.toast("Please fill all fields !!!"),!1;if($scope.password!=$scope.confirmPassword)return ToastService.toast("Passwords do not match !!!"),!1;if(-1==$scope.email.indexOf("@")||-1==$scope.email.indexOf("."))return ToastService.toast("Invalid Email"),!1;return!0})()&&DialogService.emailVerify($scope.name,$scope.email,$scope.password,$scope.role,$scope.companyName)},$scope.cancel=function(){$mdDialog.hide()},$scope.bShowError=!1,$scope.name=name,$scope.email=email,$scope.password=password,$scope.confirmPassword=password,$scope.roles=["Manager","Admin"],$scope.companyName=companyName,$scope.role=role}),app.controller("TaskCreatorCtrl",function($scope,$rootScope,$http,$localStorage,$state,$mdDialog,ToastService,TeamDataService,LeadDataService,TemplateDataService,TaskDataService,tasks){$scope.add=function(){$scope.tasks.push({}),$scope.updateTemplate($scope.tasks.length-1,0),$scope.listItemClick(task)},$scope.updateTemplate=function(taskIdx,templateIdx){var task=$scope.tasks[taskIdx],template=$scope.taskTemplates[templateIdx];if(task.templateId!=template.id){var templateData={values:[]};template.defaultData.values.forEach(function(value){var field=$rootScope.getFieldById(value.fieldId);field.type==Constants.Template.FIELD_TYPE_CHECKLIST||field.type==Constants.Template.FIELD_TYPE_RADIOLIST?templateData.values.push({fieldId:value.fieldId,value:JSON.parse(JSON.stringify(value.value))}):templateData.values.push({fieldId:value.fieldId,value:value.value})}),task.templateData=templateData,task.templateId=template.id}},$scope.getTemplateById=TemplateDataService.getTemplateById,$scope.getFieldById=TemplateDataService.getFieldById,$scope.listItemClick=function(task){$scope.selectedTask=task},$scope.save=function(){(function(){var bValid=!0;$scope.bShowError=!1,0==$scope.tasks.length?(ToastService.toast("Add some tasks to create..."),bValid=!1):($scope.tasks.forEach(function(task){task.leadId&&task.repId&&task.formTemplateId||(bValid=!1,$scope.bShowError=!0)}),bValid||ToastService.toast("Please fill all fields"));return bValid})()&&($rootScope.showWaitingDialog("Please wait while task is created..."),$http({method:"POST",url:"/api/users/task",headers:{"X-Auth-Token":$localStorage.accessToken},data:{tasks:$scope.tasks}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),TaskDataService.sync(),ToastService.toast("Tasks Created successfully...")},function(error){$rootScope.hideWaitingDialog(),ToastService.toast("Unable to create tasks...")}))},$scope.remove=function(task){var idx=$scope.tasks.indexOf(task);idx>=0&&$scope.tasks.splice(idx,1)},$scope.cancel=function(){$mdDialog.hide()},$scope.tasks=[],$scope.selectedTask={},$scope.bShowError=!1,$scope.leads=LeadDataService.cache.data,$scope.team=TeamDataService.cache.data,$scope.formTemplates=TemplateDataService.cache.data.forms,$scope.taskTemplates=TemplateDataService.cache.data.tasks,tasks?($scope.tasks=tasks,$scope.tasks.forEach(function(task,i){task.templateId||$scope.updateTemplate(i,0)})):($scope.tasks.push({}),$scope.updateTemplate(0,0)),$scope.selectedTask=$scope.tasks[0]}),app.controller("TaskTemplateEditorCtrl",function($scope,$rootScope,$mdDialog,$http,$localStorage,ToastService,TemplateDataService,template){this.close=function(){$mdDialog.hide()},this.save=function(){$scope.$broadcast(Constants.Events.TEMPLATE_VALIDATE)},$scope.template=template?JSON.parse(JSON.stringify(template)):{name:"",type:Constants.Template.TYPE_TASK,fields:[],defaultData:{values:[]}},$scope.availableFieldTypes=Constants.Template.TASK_FIELD_TYPES,$scope.$on(Constants.Events.TEMPLATE_VALIDATE_SUCCESS,function(event,args){$rootScope.showWaitingDialog("Please wait while template is being saved..."),$http({method:"POST",url:"/api/admin/template",headers:{"X-Auth-Token":$localStorage.accessToken},data:{template:$scope.template}}).then(function(response){$rootScope.hideWaitingDialog(),$mdDialog.hide(),ToastService.toast("Template saved successfully..."),TemplateDataService.syncTasks()},function(error){$rootScope.hideWaitingDialog(),ToastService.toast(error.data.error)})})}),app.controller("ToggleColumnsCtrl",function($scope,$mdDialog,columns,resultCb){var vm=this;vm.done=function(){resultCb(vm.columns),$mdDialog.hide()},vm.toggleAll=function(){for(var i=0;i<vm.columns.length;i++)vm.columns[i].show=vm.bCheckAll},vm.moveUp=function(index){index>0&&vm.columns.move(index,index-1)},vm.moveDown=function(index){index<vm.columns.length-1&&vm.columns.move(index,index+1)},vm.columns=columns}),app.controller("HelpCtrl",function($scope,$location,$anchorScroll){$scope.scrollTo=function(id){$location.hash(id),$anchorScroll()}}),app.controller("HomeCtrl",function($scope,$window,$state,DialogService){$scope.login=function(){DialogService.login()},$scope.register=function(){DialogService.register("","","")},$scope.explore=function(){$("#div_feature").is(":hidden")?($("#div_feature").show(2e3),$("#btn_explore").text("Hide Features")):($("#div_feature").slideUp(3e3),$("#btn_explore").text("Explore Features"))},$scope.downloadApp=function(){$window.location.href="https://play.google.com/store/apps/details?id=com.biz.navimate"},$scope.facebook=function(){$window.location.href="https://www.facebook.com/navimateapp/"},$state.params.login&&DialogService.login()}),app.controller("IndexCtrl",function($scope,$rootScope){$rootScope.Constants=Constants,$rootScope.Statics=Statics,$scope.waiting={bShow:!1,message:""},$rootScope.showWaitingDialog=function(message){$scope.waiting.message=message,$scope.waiting.bShow=!0},$rootScope.hideWaitingDialog=function(){$scope.waiting.bShow=!1},Array.prototype.move=function(old_index,new_index){if(new_index>=this.length)for(var k=new_index-this.length;1+k--;)this.push(void 0);this.splice(new_index,0,this.splice(old_index,1)[0])},Array.prototype.hasDupes=function(){for(var copiedArray=this.concat().sort(),i=0;i<copiedArray.length-1;i++)if(copiedArray[i+1]==copiedArray[i]&&copiedArray[i].length)return!0;return!1}}),app.controller("MapCtrl",function($scope){var vm=this;function centerMap(latLng){googleMap&&latLng&&(latLng.lat()||latLng.lng())&&googleMap.panTo(latLng)}function initMapCenter(){if(googleMap){var mapCenter=googleMap.getCenter();if(!mapCenter.lat()&&!mapCenter.lng())if(vm.markers.length)if(1==vm.markers.length)centerMap(new google.maps.LatLng(vm.markers[0].latitude,vm.markers[0].longitude));else{for(var bounds=new google.maps.LatLngBounds,i=0;i<vm.markers.length;i++)bounds.extend(new google.maps.LatLng(vm.markers[i].latitude,vm.markers[i].longitude));googleMap.fitBounds(bounds)}else currentLatLng&&centerMap(currentLatLng)}}vm.mapInitialized=function(map){googleMap=map,initMapCenter(),google.maps.event.trigger(googleMap,"resize"),$scope.$apply()},vm.markerClick=function(event,idx){$scope.$emit(Constants.Events.MAP_MARKER_CLICK,{idx:idx})};var googleMap=null,currentLatLng=null;$scope.mapParams.zoom=14,vm.markers=$scope.mapParams.markers,$scope.$on(Constants.Events.MAP_CENTER,function(event,param){centerMap(new google.maps.LatLng(param.latitude,param.longitude))}),navigator.geolocation&&navigator.geolocation.getCurrentPosition(function(position){currentLatLng=new google.maps.LatLng(position.coords.latitude,position.coords.longitude),initMapCenter()})}),app.controller("TableCtrl",function($scope,$rootScope,$state,$window,$filter,NgTableParams,ExcelService,DialogService,ToastService){var vm=this;vm.toggleRow=function(idx){emitSelectionEvent()},vm.toggleAll=function(){for(var i=0;i<vm.selection.length;i++)vm.selection[i]=vm.bCheckAll;emitSelectionEvent()},vm.resetFilters=function(){vm.filter=[];for(var i=0;i<vm.columns.length;i++){var column=vm.columns[i],filter={type:column.filterType,showBlanks:!0};if(column.filterType==$rootScope.Constants.Filter.TYPE_SELECTION){filter.selection={options:[]};for(var optionNames=[],j=0;j<vm.values.length;j++){var value=vm.values[j]["Col"+column.id];-1==optionNames.indexOf(value)&&optionNames.push(value)}for(j=0;j<optionNames.length;j++)filter.selection.options.push({name:optionNames[j],checked:!0})}else column.filterType==$rootScope.Constants.Filter.TYPE_NUMBER?filter.number={}:column.filterType==$rootScope.Constants.Filter.TYPE_TEXT?filter.text={}:column.filterType==$rootScope.Constants.Filter.TYPE_DATE&&(filter.date={});filter.sort={up:!1,down:!1},column.filter=filter}},vm.isFilterActive=function(colIdx){var bActive=!1,filter=vm.columns[colIdx].filter;if(filter.type==$rootScope.Constants.Filter.TYPE_SELECTION){for(var options=filter.selection.options,i=0;i<options.length;i++)if(!options[i].checked){bActive=!0;break}}else filter.type==$rootScope.Constants.Filter.TYPE_TEXT?filter.text.search&&(bActive=!0):filter.type==$rootScope.Constants.Filter.TYPE_NUMBER?(filter.number.greaterThan||filter.number.lesserThan)&&(bActive=!0):filter.type==$rootScope.Constants.Filter.TYPE_DATE&&(filter.date.from||filter.date.to)&&(bActive=!0);return(filter.sort.up||filter.sort.down)&&(bActive=!0),filter.showBlanks||(bActive=!0),bActive},vm.applyFilters=function(){vm.filteredValues=[];for(var i=0;i<vm.values.length;i++){for(var bAdd=!0,j=0;j<vm.columns.length;j++){var filter=vm.columns[j].filter,value=vm.values[i]["Col"+vm.columns[j].id];if(filter.showBlanks||"-"!=value){if(filter.type==$rootScope.Constants.Filter.TYPE_SELECTION)filter.selection.options.forEach(function(option){option.name!=value||option.checked||(bAdd=!1)});else if(filter.type==$rootScope.Constants.Filter.TYPE_NUMBER){var lessThan=filter.number.lesserThan,greaterThan=filter.number.greaterThan;"-"==value&&(lessThan||greaterThan)?bAdd=!1:(lessThan&&value>lessThan||greaterThan&&value<greaterThan)&&(bAdd=!1)}else if(filter.type==$rootScope.Constants.Filter.TYPE_TEXT){var searchText=filter.text.search;searchText&&-1==value.toLowerCase().search(searchText.toLowerCase())&&(bAdd=!1)}else if(filter.type==$rootScope.Constants.Filter.TYPE_DATE){var from=filter.date.from,to=filter.date.to;(from&&value<from||to&&value>to)&&(bAdd=!1)}}else bAdd=!1;if(!bAdd)break}bAdd&&vm.filteredValues.push(vm.values[i])}vm.selection=[],vm.filteredValues.forEach(function(row){vm.selection.push(!1)}),emitSelectionEvent(),applySorting()},vm.fromDateUpdate=function(fromDate,colIdx){vm.columns[colIdx].filter.date.from=$filter("date")(fromDate,"yyyy-MM-dd HH:mm:ss"),vm.applyFilters()},vm.toDateUpdate=function(toDate,colIdx){vm.columns[colIdx].filter.date.to=$filter("date")(toDate,"yyyy-MM-dd HH:mm:ss"),vm.applyFilters()},vm.sortUp=function(colIdx){var filter=vm.columns[colIdx].filter;filter.sort.up?filter.sort.up=!1:(filter.sort.up=!0,filter.sort.down=!1),applySorting()},vm.sortDown=function(colIdx){var filter=vm.columns[colIdx].filter;filter.sort.down?filter.sort.down=!1:(filter.sort.down=!0,filter.sort.up=!1),applySorting()},vm.isTextValue=function(column,value){return"-"==value||column.type==$rootScope.Constants.Template.FIELD_TYPE_TEXT||column.type==$rootScope.Constants.Template.FIELD_TYPE_NUMBER||column.type==$rootScope.Constants.Template.FIELD_TYPE_RADIOLIST||column.type==$rootScope.Constants.Template.FIELD_TYPE_CHECKLIST||column.type==$rootScope.Constants.Template.FIELD_TYPE_CHECKBOX||column.type==$rootScope.Constants.Template.FIELD_TYPE_DATE},vm.isImageValue=function(column,value){return"-"!=value&&(column.type==$rootScope.Constants.Template.FIELD_TYPE_PHOTO||column.type==$rootScope.Constants.Template.FIELD_TYPE_SIGN)},vm.isLocationValue=function(column,value){return"-"!=value&&column.type==$rootScope.Constants.Template.FIELD_TYPE_LOCATION},vm.showImage=function(filename){$window.open($state.href("photos",{name:filename}),"_blank")},vm.showLocation=function(latlng){var latLngArr=latlng.split(","),locations=[];locations.push({title:"Submitted Here",latitude:latLngArr[0],longitude:latLngArr[1]}),DialogService.locationViewer(locations)};var init=function(){vm.selection=[],vm.columns=[];for(var i=0;i<$scope.tableParams.columns.length;i++){var column=$scope.tableParams.columns[i];column.show=!0,column.id=i,vm.columns.push(column)}vm.values=[];for(i=0;i<$scope.tableParams.values.length;i++){for(var row={},j=0;j<vm.columns.length;j++)row["Col"+vm.columns[j].id]=$scope.tableParams.values[i][j];vm.values.push(row),vm.selection.push(!1)}vm.filteredValues=vm.values,vm.resetFilters()};function applySorting(){var sortingArray=[];vm.columns.forEach(function(column,i){column.filter.sort.down?sortingArray.push("Col"+column.id):column.filter.sort.up&&sortingArray.push("-Col"+column.id)}),vm.filteredValues=$filter("orderBy")(vm.filteredValues,sortingArray)}function emitSelectionEvent(){for(var selectedIdx=[],i=0;i<vm.selection.length;i++)if(vm.selection[i]){var origIdx=vm.values.indexOf(vm.filteredValues[i]);selectedIdx.push(origIdx)}$scope.$emit(Constants.Events.TABLE_ROW_SELECT,{selectedIndexes:selectedIdx})}vm.columns=[],vm.values=[],vm.filteredValues=[],vm.style=$scope.tableParams.style,vm.bCheckAll=!1,vm.selection=[],vm.pageSize=$rootScope.Constants.Table.DEFAULT_COUNT_PER_PAGE,vm.pagerParams=new NgTableParams({count:vm.pageSize},{dataset:vm.filteredValues}),$scope.$on(Constants.Events.TABLE_INIT,function(event,args){init()}),$scope.$on(Constants.Events.TABLE_CLEAR_FILTERS,function(event,args){vm.resetFilters(),vm.applyFilters()}),$scope.$on(Constants.Events.TABLE_TOGGLE_COLUMNS,function(event,args){DialogService.toggleColumns(vm.columns,function(columns){vm.columns=columns})}),$scope.$on(Constants.Events.TABLE_EXPORT,function(event,args){!function(filename){if(vm.filteredValues.length){for(var bValidColumns=!1,i=0;i<vm.columns.length;i++)if(vm.columns[i].show){bValidColumns=!0;break}if(bValidColumns){var selectedRows=[];vm.style.bSelectable?vm.selection.forEach(function(bSelected,i){bSelected&&selectedRows.push(vm.filteredValues[i])}):selectedRows=vm.filteredValues,selectedRows.length||(selectedRows=vm.filteredValues),ExcelService.export(selectedRows,vm.columns,filename)}else ToastService.toast("No columns to export !!!")}else ToastService.toast("No data to export !!!")}(args.filename)}),$scope.$watch(function(scope){return vm.filteredValues},function(){vm.pagerParams.settings().dataset=vm.filteredValues,vm.pagerParams.reload()}),$(document).on("click",".dropdown-multiselect .dropdown-menu",function(e){e.stopPropagation()}),init()}),app.controller("TemplateEditorCtrl",function($scope,$rootScope,ToastService){var vm=this;vm.Const=$rootScope.Constants.Template,vm.addNewField=function(){vm.fields.push({type:vm.Const.FIELD_TYPE_TEXT,title:""}),vm.data.values.push({value:""})},vm.removeField=function(fieldIdx){vm.fields.splice(fieldIdx,1),vm.data.values.splice(fieldIdx,1)},vm.updateFieldType=function(fieldIdx,newType){var value,field=vm.fields[fieldIdx];field.type!=newType&&(newType==vm.Const.FIELD_TYPE_TEXT||newType==vm.Const.FIELD_TYPE_PHOTO||newType==vm.Const.FIELD_TYPE_SIGN?value="":newType==vm.Const.FIELD_TYPE_NUMBER?value=0:newType==vm.Const.FIELD_TYPE_RADIOLIST?value={options:[],selection:0}:newType==vm.Const.FIELD_TYPE_CHECKLIST?value=[]:newType==vm.Const.FIELD_TYPE_CHECKBOX&&(value=!1),field.type=newType,vm.data.values[fieldIdx].value=value)},vm.isDupeFieldTitle=function(title){if(!title)return!1;var count=0;return vm.fields.forEach(function(field){field.title==title&&count++}),count>1},vm.addRadioOption=function(fieldIdx){vm.data.values[fieldIdx].value.options.push("")},vm.removeRadioOption=function(fieldIdx,optionIdx){var value=vm.data.values[fieldIdx].value;value.selection==optionIdx&&(value.selection=0),value.options.splice(optionIdx,1)},vm.addCheckOption=function(fieldIdx){vm.data.values[fieldIdx].value.push({name:"",selection:!1})},vm.removeCheckOption=function(fieldIdx,optionIdx){vm.data.values[fieldIdx].value.splice(optionIdx,1)},vm.isDupesInChecklist=function(fieldIdx){var value=vm.data.values[fieldIdx].value,names=[];return value.forEach(function(option){names.push(option.name)}),names.hasDupes()},vm.template=$scope.template,vm.availableFieldTypes=$scope.availableFieldTypes,vm.fields=vm.template.fields,vm.data=vm.template.defaultData,vm.bShowError=!1,$scope.$on(Constants.Events.TEMPLATE_VALIDATE,function(event,args){!function(){var toastMessage="";if(vm.template.name)if(vm.fields.length)for(var i=0;i<vm.fields.length;i++){var field=vm.fields[i],value=vm.data.values[i].value;if(field.title)if(vm.isDupeFieldTitle(field.title))toastMessage="Field titles must be unique...";else if(field.type){if(field.type==vm.Const.FIELD_TYPE_NUMBER&&"null"==field.value)toastMessage="Please fill mandatory values...";else if(field.type==vm.Const.FIELD_TYPE_RADIOLIST)value.options.length?-1!=value.options.indexOf("")?toastMessage="Please enter valid option name...":value.options.hasDupes()&&(toastMessage="Option names must be unique..."):toastMessage="Please add atleast 1 option to list...";else if(field.type==vm.Const.FIELD_TYPE_CHECKLIST)if(value.length){if(vm.isDupesInChecklist(i))toastMessage="Option names must be unique...";else for(var j=0;j<value.length;j++)if(!value[j].name){toastMessage="Please enter valid option name...";break}}else toastMessage="Please add atleast 1 option to list..."}else toastMessage="Field type cannot be empty...";else toastMessage="Field Title cannot be empty...";if(toastMessage.length)break}else toastMessage="Please add atleast 1 field...";else toastMessage="Please fill template name...";toastMessage.length?(vm.bShowError=!0,ToastService.toast(toastMessage)):(vm.bShowError=!1,$scope.$emit(Constants.Events.TEMPLATE_VALIDATE_SUCCESS))}()})}),app.controller("PhotosCtrl",function($scope,$rootScope,$localStorage,$stateParams,$http){var photoName;$scope.image=[],$scope.bError=!1,(photoName=$stateParams.name)?($rootScope.showWaitingDialog("Getting Photo.."),$http({method:"GET",url:"/api/photos/get",headers:{"X-Auth-Token":$localStorage.accessToken},params:{filename:photoName}}).then(function(response){$rootScope.hideWaitingDialog(),$scope.image=response.data.image},function(error){$rootScope.hideWaitingDialog(),$scope.bError=!0})):$scope.bError=!0});var Constants={Cookie:{KEY_EMAIL:"Navm8Email",KEY_PASSWORD:"Navm8Password"},Events:{TABLE_INIT:"event_table_init",TABLE_EXPORT:"event_table_export",TABLE_TOGGLE_COLUMNS:"event_table_toggle_columns",TABLE_CLEAR_FILTERS:"event_table_clear_filters",TEMPLATE_VALIDATE:"event_template_validate",TEMPLATE_VALIDATE_SUCCESS:"event_template_validate_success",MAP_CENTER:"evt-map-center",MAP_MARKER_CLICK:"evt-marker-click",MAP_MARKER_DRAGEND:"evt-marker-dragend",TEAM_DATA_READY:"evt-team-data-ready",LEAD_DATA_READY:"evt-lead-data-ready",FORM_TEMPLATE_DATA_READY:"evt-form-template-data-ready",LEAD_TEMPLATE_DATA_READY:"evt-lead-template-data-ready",TASK_TEMPLATE_DATA_READY:"evt-task-template-data-ready",TASK_DATA_READY:"evt-task-data-ready",DATA_LOAD_ERROR:"evt-data-load-error"},Tracking:{ERROR_NONE:0,ERROR_IDLE:1,ERROR_WAITING:2,ERROR_NO_UPDATES:3,ERROR_NO_GPS:4,ERROR_NO_PERMISSION:5,ERROR_OFFLINE:6},Form:{Types:["text","number","radioList","checkList","photo","signature"]},DashboardNav:{ITEM_TEAM:0,ITEM_LEADS:1,ITEM_TASKS:2,ITEM_REPORTS:3,ITEM_TEMPLATES:4,ITEM_COMPANY:5,OPTION_MANAGE:0,OPTION_REPORT:1,OPTION_FORM:2,OPTION_LEAD:3,OPTION_TASK:4,OPTION_PROFILE:5,OPTION_OPEN:6,OPTION_CLOSE:7,OPTION_SETTINGS:8},Role:{REP:1,MANAGER:2,ADMIN:3,NVM_ADMIN:4},Visibility:{PUBLIC:1,PRIVATE:2}};Constants.DashboardNav.Options=[{id:Constants.DashboardNav.OPTION_MANAGE,name:"Manage",state:"manage"},{id:Constants.DashboardNav.OPTION_REPORT,name:"Reports",state:"report"},{id:Constants.DashboardNav.OPTION_FORM,name:"Form",state:"form"},{id:Constants.DashboardNav.OPTION_LEAD,name:"Lead",state:"lead"},{id:Constants.DashboardNav.OPTION_TASK,name:"Task",state:"task"},{id:Constants.DashboardNav.OPTION_PROFILE,name:"Profile",state:"profile"},{id:Constants.DashboardNav.OPTION_OPEN,name:"Open",state:"open"},{id:Constants.DashboardNav.OPTION_CLOSE,name:"Close",state:"close"},{id:Constants.DashboardNav.OPTION_SETTINGS,name:"Settings",state:"settings"}],Constants.DashboardNav.Menu=[{id:Constants.DashboardNav.ITEM_TEAM,name:"Team",state:"team",accessLevel:Constants.Role.MANAGER,options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE]]},{id:Constants.DashboardNav.ITEM_LEADS,name:"Leads",state:"leads",accessLevel:Constants.Role.MANAGER,options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_MANAGE]]},{id:Constants.DashboardNav.ITEM_TASKS,name:"Tasks",state:"tasks",accessLevel:Constants.Role.MANAGER,options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_OPEN],Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_CLOSE]]},{id:Constants.DashboardNav.ITEM_REPORTS,name:"Reports",state:"reports",accessLevel:Constants.Role.MANAGER,options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_REPORT]]},{id:Constants.DashboardNav.ITEM_TEMPLATES,name:"Templates",state:"templates",accessLevel:Constants.Role.ADMIN,options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_FORM],Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_LEAD],Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_TASK]]},{id:Constants.DashboardNav.ITEM_COMPANY,name:"Company",state:"company",accessLevel:Constants.Role.ADMIN,options:[Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_PROFILE],Constants.DashboardNav.Options[Constants.DashboardNav.OPTION_SETTINGS]]}],Constants.Table={DEFAULT_COUNT_PER_PAGE:10},Constants.Template={TYPE_FORM:1,TYPE_LEAD:2,TYPE_TASK:3,FIELD_TYPE_TEXT:1,FIELD_TYPE_NUMBER:2,FIELD_TYPE_RADIOLIST:3,FIELD_TYPE_CHECKLIST:4,FIELD_TYPE_PHOTO:5,FIELD_TYPE_SIGN:6,FIELD_TYPE_LOCATION:7,FIELD_TYPE_CHECKBOX:8,FIELD_NAMES:["","Text","Number","Radio List","Checklist","Photo","Signature","Location","Checkbox"]},Constants.Template.FORM_FIELD_TYPES=[Constants.Template.FIELD_TYPE_TEXT,Constants.Template.FIELD_TYPE_NUMBER,Constants.Template.FIELD_TYPE_RADIOLIST,Constants.Template.FIELD_TYPE_CHECKLIST,Constants.Template.FIELD_TYPE_PHOTO,Constants.Template.FIELD_TYPE_SIGN,Constants.Template.FIELD_TYPE_CHECKBOX],Constants.Template.LEAD_FIELD_TYPES=[Constants.Template.FIELD_TYPE_TEXT,Constants.Template.FIELD_TYPE_NUMBER,Constants.Template.FIELD_TYPE_RADIOLIST,Constants.Template.FIELD_TYPE_CHECKLIST,Constants.Template.FIELD_TYPE_CHECKBOX],Constants.Template.TASK_FIELD_TYPES=[Constants.Template.FIELD_TYPE_TEXT,Constants.Template.FIELD_TYPE_NUMBER,Constants.Template.FIELD_TYPE_RADIOLIST,Constants.Template.FIELD_TYPE_CHECKLIST,Constants.Template.FIELD_TYPE_CHECKBOX],Constants.Filter={TYPE_NONE:0,TYPE_SELECTION:1,TYPE_TEXT:2,TYPE_NUMBER:3,TYPE_DATE:4};var Statics={absorbEvent:function(event){event.stopPropagation()},getFormattedElapsedTime:function(timeMs){var elapsedTimeS=(Date.now()-timeMs)/1e3,timeText="",unitText="";return elapsedTimeS<60?(timeText=Math.round(elapsedTimeS),unitText="second"):elapsedTimeS<3600?(timeText=Math.round(elapsedTimeS/60),unitText="minute"):elapsedTimeS<86400?(timeText=Math.round(elapsedTimeS/3600),unitText="hour"):elapsedTimeS<3600&&(timeText=Math.round(elapsedTimeS/86400),unitText="day"),timeText>1&&(unitText+="s"),timeText+" "+unitText}};app.service("AuthService",function($http,$localStorage){this.register=function(name,email,password,role,companyName){return $http({method:"POST",url:"/api/auth/register",data:{name:name,email:email,password:password,role:role.toUpperCase(),companyName:companyName}})},this.login=function(email,password){return $http({method:"POST",url:"/api/auth/login",data:{email:email,password:password}})},this.logout=function(){return $http({method:"GET",url:"/api/auth/logout",headers:{"X-Auth-Token":$localStorage.accessToken}})},this.emailOtp=function(otp,email){return $http({method:"POST",url:"/api/auth/email",headers:{"X-Auth-Token":$localStorage.accessToken},data:{otp:otp,email:email}})}}),app.service("DialogService",function($mdDialog){this.alert=function(message){$mdDialog.show({templateUrl:"/static/views/dialogs/Alert.html",controller:"AlertCtrl",clickOutsideToClose:!0,locals:{message:message}})},this.confirm=function(message,yesCb){$mdDialog.show({templateUrl:"/static/views/dialogs/Confirm.html",controller:"ConfirmCtrl",clickOutsideToClose:!0,locals:{message:message,yesCb:yesCb}})},this.login=function(){$mdDialog.show({templateUrl:"/static/views/dialogs/Login.html",controller:"LoginCtrl",clickOutsideToClose:!0})},this.register=function(name,email,password,role,companyName){$mdDialog.show({templateUrl:"/static/views/dialogs/Register.html",controller:"RegisterCtrl",clickOutsideToClose:!0,locals:{name:name,email:email,password:password,role:role,companyName:companyName}})},this.addRep=function(teamUpdateCb){$mdDialog.show({templateUrl:"/static/views/dialogs/AddRep.html",controller:"AddRepCtrl",clickOutsideToClose:!0,locals:{teamUpdateCb:teamUpdateCb}})},this.taskCreator=function(tasks){$mdDialog.show({templateUrl:"/static/views/dialogs/TaskCreator.html",controller:"TaskCreatorCtrl",clickOutsideToClose:!0,locals:{tasks:tasks}})},this.leadEditor=function(leads){$mdDialog.show({templateUrl:"/static/views/dialogs/LeadEditor.html",controller:"LeadEditorCtrl",clickOutsideToClose:!0,locals:{leads:leads}})},this.formTemplateEditor=function(template,updateCb){$mdDialog.show({templateUrl:"/static/views/dialogs/FormTemplateEditor.html",controller:"FormTemplateEditorCtrl as $ctrl",clickOutsideToClose:!0,locals:{template:template,updateCb:updateCb}})},this.leadTemplateEditor=function(template){$mdDialog.show({templateUrl:"/static/views/dialogs/LeadTemplateEditor.html",controller:"LeadTemplateEditorCtrl as $ctrl",clickOutsideToClose:!0,locals:{template:template}})},this.taskTemplateEditor=function(template){$mdDialog.show({templateUrl:"/static/views/dialogs/TaskTemplateEditor.html",controller:"TaskTemplateEditorCtrl as $ctrl",clickOutsideToClose:!0,locals:{template:template}})},this.liveTracking=function(reps){$mdDialog.show({templateUrl:"/static/views/dialogs/LiveTracking.html",controller:"LiveTrackingCtrl as $ctrl",clickOutsideToClose:!1,locals:{reps:reps}})},this.emailVerify=function(name,email,password,role,companyName){$mdDialog.show({templateUrl:"/static/views/dialogs/EmailVerify.html",controller:"EmailVerifyCtrl",clickOutsideToClose:!1,locals:{name:name,email:email,password:password,role:role,companyName:companyName}})},this.toggleColumns=function(columns,resultCb){$mdDialog.show({templateUrl:"/static/views/dialogs/ToggleColumns.html",controller:"ToggleColumnsCtrl as $ctrl",clickOutsideToClose:!0,locals:{columns:columns,resultCb:resultCb}})},this.changePassword=function(){$mdDialog.show({templateUrl:"/static/views/dialogs/ChangePassword.html",controller:"ChangePasswordCtrl",clickOutsideToClose:!0})},this.locationViewer=function(locations){$mdDialog.show({templateUrl:"/static/views/dialogs/LocationViewer.html",controller:"LocationViewerCtrl",clickOutsideToClose:!0,locals:{locations:locations}})}}),app.service("ExcelService",function($http,$localStorage,$filter,FileSaver,Blob){function s2ab(s){if("undefined"!=typeof ArrayBuffer){for(var buf=new ArrayBuffer(s.length),view=new Uint8Array(buf),i=0;i!=s.length;++i)view[i]=255&s.charCodeAt(i);return buf}for(buf=new Array(s.length),i=0;i!=s.length;++i)buf[i]=255&s.charCodeAt(i);return buf}this.excelRead=function(workbook){var worksheet=workbook.Sheets[workbook.SheetNames[0]],range=XLSX.utils.decode_range(worksheet["!ref"]),rows=[];for(row=range.s.r;row<=range.e.r;row++){var cols=[];for(col=range.s.c;col<=range.e.c;col++){var cell=worksheet[XLSX.utils.encode_cell({r:row,c:col})];cell?cols.push(cell.v):cols.push("")}rows.push(cols)}return $http({method:"POST",url:"/api/leads/upload",headers:{"X-Auth-Token":$localStorage.accessToken},data:{excelData:JSON.stringify(rows)}})},this.export=function(values,columns,fileNamePrefix){for(var json=[],i=0;i<values.length;i++){var row=values[i];json.push({});for(var j=0;j<columns.length;j++){var column=columns[j],value=row["Col"+column.id];column.show&&("-"!=value&&(column.type==Constants.Template.FIELD_TYPE_LOCATION?value="https://www.google.com/maps/search/?api=1&query="+value:column.type!=Constants.Template.FIELD_TYPE_PHOTO&&column.type!=Constants.Template.FIELD_TYPE_SIGN||(value="https://biz.navimateapp.com/#/photos?name="+value)),json[json.length-1][column.title]=value)}}var ws=XLSX.utils.json_to_sheet(json),wb={SheetNames:[],Sheets:{}};XLSX.utils.book_append_sheet(wb,ws,"Sheet 1");var timestamp,wbOut=XLSX.write(wb,{bookType:"xlsx",bookSST:!0,type:"binary"}),blob=new Blob([s2ab(wbOut)],{type:"application/octet-stream"}),fileName=fileNamePrefix+(timestamp=new Date,timestamp=$filter("date")(timestamp,"-dd-MM-yy-HHmm"))+".xlsx";try{FileSaver.saveAs(blob,fileName)}catch(e){console.log(e,wbOut)}},this.leadUploadTemplate=function(){var ws=XLSX.utils.json_to_sheet([{"Title*":"","Phone*":"","Address*":"",Description:"",Email:"",Latitude:"",Longitude:""}]),wb={SheetNames:[],Sheets:{}};XLSX.utils.book_append_sheet(wb,ws,"Sheet 1");var wbOut=XLSX.write(wb,{bookType:"xlsx",bookSST:!0,type:"binary"}),blob=new Blob([s2ab(wbOut)],{type:"application/octet-stream"});try{FileSaver.saveAs(blob,"Leads_Template.xlsx")}catch(e){console.log(e,wbOut)}}}),app.service("GoogleApiService",function($http,$localStorage){this.autoComplete=function(input,resultCb,errorCb){$http({method:"GET",url:"/api/googleapis/autocomplete",headers:{"X-Auth-Token":$localStorage.accessToken},params:{input:input}}).then(function(response){resultCb(response.data)},function(error){console.log("Cannot get autocomplete results : "+error),errorCb()})},this.addressToLatlng=function(address,resultCb){$http({method:"GET",url:"/api/googleapis/geocode",headers:{"X-Auth-Token":$localStorage.accessToken},params:{address:address}}).then(function(response){resultCb(response.data.latitude,response.data.longitude)},function(error){console.log("Cannot convert from address to latlng : "+error)})},this.latlngToAddress=function(lat,lng,resultCb){$http({method:"GET",url:"/api/googleapis/geocode/reverse",headers:{"X-Auth-Token":$localStorage.accessToken},params:{latitude:lat,longitude:lng}}).then(function(response){resultCb(response.data.address)},function(error){console.log("Cannot convert from latlng to address : "+error)})}}),app.service("LeadDataService",function($rootScope,$http,$localStorage){var vm=this;vm.cache={data:[]},vm.sync=function(){$http({method:"GET",url:"/api/users/lead",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){vm.cache.data=response.data,$rootScope.$broadcast(Constants.Events.LEAD_DATA_READY)},function(error){$rootScope.$broadcast(Constants.Events.DATA_LOAD_ERROR)})},vm.getById=function(id){for(var i=0;i<vm.cache.data.length;i++){var lead=vm.cache.data[i];if(lead.id==id)return lead}return null}}),app.service("LocReportDS",function($http,$localStorage,$q){var vm=this;vm.cache=[],vm.sync=function(repId){var deferred=$q.defer();return $http({method:"GET",url:"/api/users/locationReport",headers:{"X-Auth-Token":$localStorage.accessToken},params:{repId:repId}}).then(function(response){vm.cache=response.data,deferred.resolve(null)},function(error){deferred.reject(null)}),deferred.promise}}),app.service("TaskDataService",function($rootScope,$http,$localStorage){var vm=this;vm.cache={data:[]},vm.sync=function(){$http({method:"GET",url:"/api/users/task",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){vm.cache.data=response.data,$rootScope.$broadcast(Constants.Events.TASK_DATA_READY)},function(error){$rootScope.$broadcast(Constants.Events.DATA_LOAD_ERROR)})},vm.getById=function(id){for(var i=0;i<vm.cache.data.length;i++){var task=vm.cache.data[i];if(task.id==id)return task}return null}}),app.service("TeamDataService",function($rootScope,$http,$localStorage){var vm=this;vm.cache={data:[]},vm.sync=function(){$http({method:"GET",url:"/api/users/team",headers:{"X-Auth-Token":$localStorage.accessToken}}).then(function(response){vm.cache.data=response.data,$rootScope.$broadcast(Constants.Events.TEAM_DATA_READY)},function(error){$rootScope.$broadcast(Constants.Events.DATA_LOAD_ERROR)})},vm.getById=function(id){for(var i=0;i<vm.cache.data.length;i++){var rep=vm.cache.data[i];if(rep.id==id)return rep}return null}}),app.service("TemplateDataService",function($rootScope,$http,$localStorage){var vm=this;vm.cache={data:{forms:[],leads:[],tasks:[]}},vm.syncForms=function(){$http({method:"GET",url:"/api/users/template",headers:{"X-Auth-Token":$localStorage.accessToken},params:{templateType:Constants.Template.TYPE_FORM}}).then(function(response){vm.cache.data.forms=response.data.templates,$rootScope.$broadcast(Constants.Events.FORM_TEMPLATE_DATA_READY)},function(error){$rootScope.$broadcast(Constants.Events.DATA_LOAD_ERROR)})},vm.syncLeads=function(){$http({method:"GET",url:"/api/users/template",headers:{"X-Auth-Token":$localStorage.accessToken},params:{templateType:Constants.Template.TYPE_LEAD}}).then(function(response){vm.cache.data.leads=response.data.templates,$rootScope.$broadcast(Constants.Events.LEAD_TEMPLATE_DATA_READY)},function(error){$rootScope.$broadcast(Constants.Events.DATA_LOAD_ERROR)})},vm.syncTasks=function(){$http({method:"GET",url:"/api/users/template",headers:{"X-Auth-Token":$localStorage.accessToken},params:{templateType:Constants.Template.TYPE_TASK}}).then(function(response){vm.cache.data.tasks=response.data.templates,$rootScope.$broadcast(Constants.Events.TASK_TEMPLATE_DATA_READY)},function(error){$rootScope.$broadcast(Constants.Events.DATA_LOAD_ERROR)})},vm.getTemplateById=function(id){for(var i=0;i<vm.cache.data.forms.length;i++){if((template=vm.cache.data.forms[i]).id==id)return template}for(i=0;i<vm.cache.data.leads.length;i++){if((template=vm.cache.data.leads[i]).id==id)return template}for(i=0;i<vm.cache.data.tasks.length;i++){var template;if((template=vm.cache.data.tasks[i]).id==id)return template}return null},vm.getFieldById=function(id){for(var i=0;i<vm.cache.data.forms.length;i++)for(var template=vm.cache.data.forms[i],j=0;j<template.fields.length;j++){if(id==(field=template.fields[j]).id)return field}for(i=0;i<vm.cache.data.leads.length;i++)for(template=vm.cache.data.leads[i],j=0;j<template.fields.length;j++){if(id==(field=template.fields[j]).id)return field}for(i=0;i<vm.cache.data.tasks.length;i++)for(template=vm.cache.data.tasks[i],j=0;j<template.fields.length;j++){var field;if(id==(field=template.fields[j]).id)return field}return null}}),app.service("ToastService",function($mdToast){this.toast=function(message){$mdToast.show($mdToast.simple().textContent(message).position("bottom center").hideDelay(3e3))}});